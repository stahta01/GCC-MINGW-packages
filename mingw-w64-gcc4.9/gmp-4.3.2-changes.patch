# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1249486944 -7200
#      Wed Aug 05 17:42:24 2009 +0200
# Node ID b335ed270aaf31a91b0f754b7ce708c6f9048061
# Parent  51d8a610e702f49a62c21b4055eae20c004362c6
(check_random): Avoid zero divisors.

diff -r 51d8a610e702 -r b335ed270aaf tests/mpz/dive_ui.c
--- a/tests/mpz/dive_ui.c	Tue Jul 28 16:37:29 2009 +0200
+++ b/tests/mpz/dive_ui.c	Wed Aug 05 17:42:24 2009 +0200
@@ -43,7 +43,9 @@
 
   for (i = 0; i < reps; i++)
     {
-      d = (unsigned long) urandom();
+      do
+	d = (unsigned long) urandom();
+      while (d == 0);
       mpz_erandomb (q, rands, 512);
       mpz_mul_ui (a, q, d);
 
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1249486969 -7200
#      Wed Aug 05 17:42:49 2009 +0200
# Node ID 7d3ed295e2ea85ace09bd5c6e0a054b411d49e0f
# Parent  b335ed270aaf31a91b0f754b7ce708c6f9048061
*** empty log message ***

diff -r b335ed270aaf -r 7d3ed295e2ea ChangeLog
--- a/ChangeLog	Wed Aug 05 17:42:24 2009 +0200
+++ b/ChangeLog	Wed Aug 05 17:42:49 2009 +0200
@@ -1,3 +1,7 @@
+2009-08-05  Torbjorn Granlund  <tege@gmplib.org>
+
+	* tests/mpz/dive_ui.c (check_random): Avoid zero divisors.
+
 2009-07-26  Torbjorn Granlund  <tege@swox.com>
 
 	* config.guess (_cpuid): Recognize more Intel "Core" processors.
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1253039348 -7200
#      Tue Sep 15 20:29:08 2009 +0200
# Node ID 1c8c101c6866de989dee89f07a03795605456dea
# Parent  7d3ed295e2ea85ace09bd5c6e0a054b411d49e0f
Print huge exponents properly.

diff -r 7d3ed295e2ea -r 1c8c101c6866 ChangeLog
--- a/ChangeLog	Wed Aug 05 17:42:49 2009 +0200
+++ b/ChangeLog	Tue Sep 15 20:29:08 2009 +0200
@@ -1,3 +1,9 @@
+2009-09-15  Torbjorn Granlund  <tege@gmplib.org>
+
+	Suggested by Uwe Mueller:
+	* printf/doprnt.c: Use "%ld" for exponent printing.
+	* printf/doprntf.c (__gmp_doprnt_mpf): Make expval "long".
+
 2009-08-05  Torbjorn Granlund  <tege@gmplib.org>
 
 	* tests/mpz/dive_ui.c (check_random): Avoid zero divisors.
diff -r 7d3ed295e2ea -r 1c8c101c6866 printf/doprnt.c
--- a/printf/doprnt.c	Wed Aug 05 17:42:49 2009 +0200
+++ b/printf/doprnt.c	Tue Sep 15 20:29:08 2009 +0200
@@ -211,7 +211,7 @@
 
       param.base = 10;
       param.conv = 0;
-      param.expfmt = "e%c%02d";
+      param.expfmt = "e%c%02ld";
       param.exptimes4 = 0;
       param.fill = ' ';
       param.justify = DOPRNT_JUSTIFY_RIGHT;
@@ -239,11 +239,11 @@
 	       and there's no leading zeros on the exponent (which is in
 	       fact bit-based) */
 	    param.base = 16;
-	    param.expfmt = "p%c%d";
+	    param.expfmt = "p%c%ld";
 	    goto conv_a;
 	  case 'A':
 	    param.base = -16;
-	    param.expfmt = "P%c%d";
+	    param.expfmt = "P%c%ld";
 	  conv_a:
 	    param.conv = DOPRNT_CONV_SCIENTIFIC;
 	    param.exptimes4 = 1;
@@ -350,7 +350,7 @@
 
 	  case 'E':
 	    param.base = -10;
-	    param.expfmt = "E%c%02d";
+	    param.expfmt = "E%c%02ld";
 	    /*FALLTHRU*/
 	  case 'e':
 	    param.conv = DOPRNT_CONV_SCIENTIFIC;
@@ -403,7 +403,7 @@
 
 	  case 'G':
 	    param.base = -10;
-	    param.expfmt = "E%c%02d";
+	    param.expfmt = "E%c%02ld";
 	    /*FALLTHRU*/
 	  case 'g':
 	    param.conv = DOPRNT_CONV_GENERAL;
diff -r 7d3ed295e2ea -r 1c8c101c6866 printf/doprntf.c
--- a/printf/doprntf.c	Wed Aug 05 17:42:49 2009 +0200
+++ b/printf/doprntf.c	Tue Sep 15 20:29:08 2009 +0200
@@ -231,7 +231,7 @@
 
   case DOPRNT_CONV_SCIENTIFIC:
     {
-      int   expval;
+      long int expval;
       char  expsign;
 
       if (prec <= -1)
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1256489380 -3600
#      Sun Oct 25 17:49:40 2009 +0100
# Node ID 32cc41c2fdeaf3c5400cc3491ad82b8a9341d305
# Parent  1c8c101c6866de989dee89f07a03795605456dea
Fix code handling denorms for 64-bit machines.

diff -r 1c8c101c6866 -r 32cc41c2fdea ChangeLog
--- a/ChangeLog	Tue Sep 15 20:29:08 2009 +0200
+++ b/ChangeLog	Sun Oct 25 17:49:40 2009 +0100
@@ -1,3 +1,8 @@
+2009-10-23  Torbjorn Granlund  <tege@gmplib.org>
+
+	* mpn/generic/get_d.c: Fix code handling denorms for 64-bit machines.
+	* tests/mpf/t-get_d.c (test_denorms): New function.
+
 2009-09-15  Torbjorn Granlund  <tege@gmplib.org>
 
 	Suggested by Uwe Mueller:
diff -r 1c8c101c6866 -r 32cc41c2fdea mpn/generic/get_d.c
--- a/mpn/generic/get_d.c	Tue Sep 15 20:29:08 2009 +0200
+++ b/mpn/generic/get_d.c	Sun Oct 25 17:49:40 2009 +0100
@@ -271,30 +271,27 @@
       }
     else if (UNLIKELY (exp <= CONST_NEG_1023))
       {
-	int rshift = GMP_LIMB_BITS - lshift;
+	int rshift;
 
 	if (LIKELY (exp <= CONST_NEG_1022_SUB_53))
 	  return 0.0;	 /* denorm underflows to zero */
 
 	rshift = -1022 - exp;
 	ASSERT (rshift > 0 && rshift < 53);
-	if (GMP_LIMB_BITS == 64)
-	  {
-	    mlo = (mlo >> rshift) | (mhi << lshift);
-	    mhi >>= rshift;
-	  }
-	else
+#if GMP_LIMB_BITS > 53
+	mlo >>= rshift;
+	mhi = mlo >> 32;
+#else
+	if (rshift >= 32)
 	  {
-	    if (rshift >= 32)
-	      {
-		mlo = mhi;
-		mhi = 0;
-		rshift -= 32;
-	      }
-	    lshift = GMP_LIMB_BITS - rshift;
-	    mlo = (mlo >> rshift) | (rshift == 0 ? 0 : mhi << lshift);
-	    mhi >>= rshift;
+	    mlo = mhi;
+	    mhi = 0;
+	    rshift -= 32;
 	  }
+	lshift = GMP_LIMB_BITS - rshift;
+	mlo = (mlo >> rshift) | (rshift == 0 ? 0 : mhi << lshift);
+	mhi >>= rshift;
+#endif
 	exp = -1023;
       }
   }
diff -r 1c8c101c6866 -r 32cc41c2fdea tests/mpf/t-get_d.c
--- a/tests/mpf/t-get_d.c	Tue Sep 15 20:29:08 2009 +0200
+++ b/tests/mpf/t-get_d.c	Sun Oct 25 17:49:40 2009 +0100
@@ -1,6 +1,6 @@
 /* Test mpf_get_d and mpf_set_d.
 
-   Copyright 1996, 1999, 2000, 2001 Free Software Foundation, Inc.
+   Copyright 1996, 1999, 2000, 2001, 2009 Free Software Foundation, Inc.
 
    This file is part of the GNU MP Library.
 
@@ -40,6 +40,32 @@
 #define HIGH_BOUND 1e300
 #endif
 
+void
+test_denorms (int prc)
+{
+#ifdef _GMP_IEEE_FLOATS
+  double d1, d2;
+  mpf_t f;
+  int i;
+
+  mpf_set_default_prec (prc);
+
+  mpf_init (f);
+
+  d1 = 1.9;
+  for (i = 0; i < 820; i++)
+    {
+      mpf_set_d (f, d1);
+      d2 = mpf_get_d (f);
+      if (d1 != d2)
+        abort ();
+      d1 *= 0.4;
+    }
+
+  mpf_clear (f);
+#endif
+}
+
 int
 main (int argc, char **argv)
 {
@@ -69,6 +95,12 @@
   mpf_clear (u);
   mpf_clear (v);
 
+  test_denorms (10);
+  test_denorms (32);
+  test_denorms (64);
+  test_denorms (100);
+  test_denorms (200);
+
   tests_end ();
   exit (0);
 }
# HG changeset patch
# User Niels MÃ¶ller <nisse@lysator.liu.se>
# Date 1260978006 -3600
#      Wed Dec 16 16:40:06 2009 +0100
# Node ID 01b7222c5544bf9a0958a280c30ca613636cc95f
# Parent  32cc41c2fdeaf3c5400cc3491ad82b8a9341d305
Backported gcdext normalization changes.

diff -r 32cc41c2fdea -r 01b7222c5544 ChangeLog
--- a/ChangeLog	Sun Oct 25 17:49:40 2009 +0100
+++ b/ChangeLog	Wed Dec 16 16:40:06 2009 +0100
@@ -1,3 +1,32 @@
+2009-12-15  Torbjorn Granlund  <tege@gmplib.org>
+
+	* mpn/generic/gcdext_subdiv_step.c: Get an ASSERT right.
+
+2009-12-03  Niels Möller  <nisse@lysator.liu.se>
+
+	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Handle v == 0
+	from mpn_gcdext_1.
+	* mpn/generic/gcdext_1.c (mpn_gcdext_1): Allow inputs with a < b,
+	assertions fixed accordingly.
+
+2009-12-03  Niels Möller  <nisse@lysator.liu.se>
+
+	* mpn/generic/gcdext_subdiv_step.c (mpn_gcdext_subdiv_step):
+	Select the right cofactor in the cases A == B or A == 2B.
+
+	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Deleted
+	handling of ap[0] == 0 and bp[0] == 0; these cases don't happen.
+	Select the right cofactor in the case ap[0] == bp[0].
+	* mpn/generic/gcdext.c (mpn_gcdext): Analogous changes.
+
+2009-12-02  Niels Möller  <nisse@lysator.liu.se>
+
+	* gmp-h.in (mpn_gcdext_1): Updated prototype.
+	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Updated for
+	signed cofactors from gcdext_1.
+	* mpn/generic/gcdext_1.c (mpn_gcdext_1): Use Euclid's algorithm,
+	and return signed cofactors.
+
 2009-10-23  Torbjorn Granlund  <tege@gmplib.org>
 
 	* mpn/generic/get_d.c: Fix code handling denorms for 64-bit machines.
diff -r 32cc41c2fdea -r 01b7222c5544 gmp-h.in
--- a/gmp-h.in	Sun Oct 25 17:49:40 2009 +0100
+++ b/gmp-h.in	Wed Dec 16 16:40:06 2009 +0100
@@ -1524,7 +1524,7 @@
 __GMP_DECLSPEC mp_limb_t mpn_gcd_1 __GMP_PROTO ((mp_srcptr, mp_size_t, mp_limb_t)) __GMP_ATTRIBUTE_PURE;
 
 #define mpn_gcdext_1 __MPN(gcdext_1)
-__GMP_DECLSPEC mp_limb_t mpn_gcdext_1 __GMP_PROTO ((mp_ptr, mp_ptr, mp_limb_t, mp_limb_t));
+__GMP_DECLSPEC mp_limb_t mpn_gcdext_1 __GMP_PROTO ((mp_limb_signed_t *, mp_limb_signed_t *, mp_limb_t, mp_limb_t));
 
 #define mpn_gcdext __MPN(gcdext)
 __GMP_DECLSPEC mp_size_t mpn_gcdext __GMP_PROTO ((mp_ptr, mp_ptr, mp_size_t *, mp_ptr, mp_size_t, mp_ptr, mp_size_t));
diff -r 32cc41c2fdea -r 01b7222c5544 mpn/generic/gcdext.c
--- a/mpn/generic/gcdext.c	Sun Oct 25 17:49:40 2009 +0100
+++ b/mpn/generic/gcdext.c	Wed Dec 16 16:40:06 2009 +0100
@@ -1,6 +1,6 @@
 /* mpn_gcdext -- Extended Greatest Common Divisor.
 
-Copyright 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008 Free Software
+Copyright 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009 Free Software
 Foundation, Inc.
 
 This file is part of the GNU MP Library.
@@ -388,22 +388,27 @@
 	}
     }
 
-  if (mpn_zero_p (ap, n))
+  if (UNLIKELY (mpn_cmp (ap, bp, n) == 0))
     {
-      MPN_COPY (gp, bp, n);
-      MPN_NORMALIZE_NOT_ZERO (u0, un);
-      MPN_COPY (up, u0, un);
-      *usizep = -un;
+      /* Must return the smallest cofactor, +u1 or -u0 */
+      int c;
+
+      MPN_COPY (gp, ap, n);
 
-      TMP_FREE;
-      return n;
-    }
-  else if (mpn_zero_p (bp, n))
-    {
-      MPN_COPY (gp, ap, n);
-      MPN_NORMALIZE_NOT_ZERO (u1, un);
-      MPN_COPY (up, u1, un);
-      *usizep = un;
+      MPN_CMP (c, u0, u1, un);
+      ASSERT (c != 0);
+      if (c < 0)
+	{
+	  MPN_NORMALIZE (u0, un);
+	  MPN_COPY (up, u0, un);
+	  *usizep = -un;
+	}
+      else
+	{
+	  MPN_NORMALIZE_NOT_ZERO (u1, un);
+	  MPN_COPY (up, u1, un);
+	  *usizep = un;
+	}
 
       TMP_FREE;
       return n;
diff -r 32cc41c2fdea -r 01b7222c5544 mpn/generic/gcdext_1.c
--- a/mpn/generic/gcdext_1.c	Sun Oct 25 17:49:40 2009 +0100
+++ b/mpn/generic/gcdext_1.c	Wed Dec 16 16:40:06 2009 +0100
@@ -1,6 +1,6 @@
 /* mpn_gcdext -- Extended Greatest Common Divisor.
 
-Copyright 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008 Free Software
+Copyright 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009 Free Software
 Foundation, Inc.
 
 This file is part of the GNU MP Library.
@@ -18,230 +18,37 @@
 You should have received a copy of the GNU Lesser General Public License
 along with the GNU MP Library.  If not, see http://www.gnu.org/licenses/.  */
 
-/* Default to binary gcdext_1, since it is best on most current machines.
-   We should teach tuneup to choose the right gcdext_1.  */
-#define GCDEXT_1_USE_BINARY 1
-
 #include "gmp.h"
 #include "gmp-impl.h"
 #include "longlong.h"
 
-#ifndef NULL
-# define NULL ((void *) 0)
-#endif
 
 /* FIXME: Takes two single-word limbs. It could be extended to a
  * function that accepts a bignum for the first input, and only
  * returns the first co-factor. */
 
-/* Returns g, u and v such that g = u A - v B. There are three
-   different cases for the result:
-
-     g = u A - v B, 0 < u < b, 0 < v < a
-     g = A          u = 1, v = 0
-     g = B          u = B, v = A - 1
-
-   We always return with 0 < u <= b, 0 <= v < a.
-*/
-#if GCDEXT_1_USE_BINARY
-
-static mp_limb_t
-gcdext_1_odd (mp_limb_t *up, mp_limb_t *vp, mp_limb_t a, mp_limb_t b)
-{
-  mp_limb_t u0;
-  mp_limb_t v0;
-  mp_limb_t v1;
-  mp_limb_t u1;
-
-  mp_limb_t B = b;
-  mp_limb_t A = a;
-
-  /* Through out this function maintain
-
-     a = u0 A - v0 B
-     b = u1 A - v1 B
-
-     where A and B are odd. */
-
-  u0 = 1; v0 = 0;
-  u1 = b; v1 = a-1;
-
-  if (A == 1)
-    {
-      *up = u0; *vp = v0;
-      return 1;
-    }
-  else if (B == 1)
-    {
-      *up = u1; *vp = v1;
-      return 1;
-    }
-
-  while (a != b)
-    {
-      mp_limb_t mask;
-
-      ASSERT (a % 2 == 1);
-      ASSERT (b % 2 == 1);
-
-      ASSERT (0 < u0); ASSERT (u0 <= B);
-      ASSERT (0 < u1); ASSERT (u1 <= B);
-
-      ASSERT (0 <= v0); ASSERT (v0 < A);
-      ASSERT (0 <= v1); ASSERT (v1 < A);
-
-      if (a > b)
-	{
-	  MP_LIMB_T_SWAP (a, b);
-	  MP_LIMB_T_SWAP (u0, u1);
-	  MP_LIMB_T_SWAP (v0, v1);
-	}
-
-      ASSERT (a < b);
-
-      /* Makes b even */
-      b -= a;
-
-      mask = - (mp_limb_t) (u1 < u0);
-      u1 += B & mask;
-      v1 += A & mask;
-      u1 -= u0;
-      v1 -= v0;
-
-      ASSERT (b % 2 == 0);
-
-      do
-	{
-	  /* As b = u1 A + v1 B is even, while A and B are odd,
-	     either both or none of u1, v1 is even */
-
-	  ASSERT (u1 % 2 == v1 % 2);
-
-	  mask = -(u1 & 1);
-	  u1 = u1 / 2 + ((B / 2) & mask) - mask;
-	  v1 = v1 / 2 + ((A / 2) & mask) - mask;
-
-	  b /= 2;
-	}
-      while (b % 2 == 0);
-    }
-
-  /* Now g = a = b */
-  ASSERT (a == b);
-  ASSERT (u1 <= B);
-  ASSERT (v1 < A);
-
-  ASSERT (A % a == 0);
-  ASSERT (B % a == 0);
-  ASSERT (u0 % (B/a) == u1 % (B/a));
-  ASSERT (v0 % (A/a) == v1 % (A/a));
-
-  *up = u0; *vp = v0;
-
-  return a;
-}
-
 mp_limb_t
-mpn_gcdext_1 (mp_limb_t *up, mp_limb_t *vp, mp_limb_t a, mp_limb_t b)
-{
-  unsigned shift = 0;
-  mp_limb_t g;
-  mp_limb_t u;
-  mp_limb_t v;
-
-  /* We use unsigned values in the range 0, ... B - 1. As the values
-     are uniquely determined only modulo B, we can add B at will, to
-     get numbers in range or flip the least significant bit. */
-  /* Deal with powers of two */
-  while ((a | b) % 2 == 0)
-    {
-      a /= 2; b /= 2; shift++;
-    }
-
-  if (b % 2 == 0)
-    {
-      unsigned k = 0;
-
-      do {
-	b /= 2; k++;
-      } while (b % 2 == 0);
-
-      g = gcdext_1_odd (&u, &v, a, b);
-
-      while (k--)
-	{
-	  /* We have g = u a + v b, and need to construct
-	     g = u'a + v'(2b).
-
-	     If v is even, we can just set u' = u, v' = v/2
-	     If v is odd, we can set v' = (v + a)/2, u' = u + b
-	  */
-
-	  if (v % 2 == 0)
-	    v /= 2;
-	  else
-	    {
-	      u = u + b;
-	      v = v/2 + a/2 + 1;
-	    }
-	  b *= 2;
-	}
-    }
-  else if (a % 2 == 0)
-    {
-      unsigned k = 0;
-
-      do {
-	a /= 2; k++;
-      } while (a % 2 == 0);
-
-      g = gcdext_1_odd (&u, &v, a, b);
-
-      while (k--)
-	{
-	  /* We have g = u a + v b, and need to construct
-	     g = u'(2a) + v'b.
-
-	     If u is even, we can just set u' = u/2, v' = v.
-	     If u is odd, we can set u' = (u + b)/2
-	  */
-
-	  if (u % 2 == 0)
-	    u /= 2;
-	  else
-	    {
-	      u = u/2 + b/2 + 1;
-	      v = v + a;
-	    }
-	  a *= 2;
-	}
-    }
-  else
-    /* Ok, both are odd */
-    g = gcdext_1_odd (&u, &v, a, b);
-
-  *up = u;
-  *vp = v;
-
-  return g << shift;
-}
-
-#else /* ! GCDEXT_1_USE_BINARY */
-static mp_limb_t
-gcdext_1_u (mp_limb_t *up, mp_limb_t a, mp_limb_t b)
+mpn_gcdext_1 (mp_limb_signed_t *up, mp_limb_signed_t *vp,
+	      mp_limb_t a, mp_limb_t b)
 {
   /* Maintain
 
-     a =   u0 A mod B
-     b = - u1 A mod B
+     a =  u0 A + v0 B
+     b =  u1 A + v1 B
+
+     where A, B are the original inputs.
   */
-  mp_limb_t u0 = 1;
-  mp_limb_t u1 = 0;
-  mp_limb_t B = b;
+  mp_limb_signed_t u0 = 1;
+  mp_limb_signed_t v0 = 0;
+  mp_limb_signed_t u1 = 0;
+  mp_limb_signed_t v1 = 1;
 
-  ASSERT (a >= b);
+  ASSERT (a > 0);
   ASSERT (b > 0);
 
+  if (a < b)
+    goto divide_by_b;
+
   for (;;)
     {
       mp_limb_t q;
@@ -251,58 +58,14 @@
 
       if (a == 0)
 	{
-	  *up = B - u1;
+	  *up = u1;
+	  *vp = v1;
 	  return b;
 	}
-      u0 += q * u1;
-
-      q = b / a;
-      b -= q * a;
-
-      if (b == 0)
-	{
-	  *up = u0;
-	  return a;
-	}
-      u1 += q * u0;
-    }
-}
-
-mp_limb_t
-mpn_gcdext_1 (mp_limb_t *up, mp_limb_t *vp, mp_limb_t a, mp_limb_t b)
-{
-  /* Maintain
+      u0 -= q * u1;
+      v0 -= q * v1;
 
-     a =   u0 A - v0 B
-     b = - u1 A + v1 B = (B - u1) A - (A - v1) B
-  */
-  mp_limb_t u0 = 1;
-  mp_limb_t v0 = 0;
-  mp_limb_t u1 = 0;
-  mp_limb_t v1 = 1;
-
-  mp_limb_t A = a;
-  mp_limb_t B = b;
-
-  ASSERT (a >= b);
-  ASSERT (b > 0);
-
-  for (;;)
-    {
-      mp_limb_t q;
-
-      q = a / b;
-      a -= q * b;
-
-      if (a == 0)
-	{
-	  *up = B - u1;
-	  *vp = A - v1;
-	  return b;
-	}
-      u0 += q * u1;
-      v0 += q * v1;
-
+    divide_by_b:
       q = b / a;
       b -= q * a;
 
@@ -312,8 +75,7 @@
 	  *vp = v0;
 	  return a;
 	}
-      u1 += q * u0;
-      v1 += q * v0;
+      u1 -= q * u0;
+      v1 -= q * v0;
     }
 }
-#endif /* ! GCDEXT_1_USE_BINARY */
diff -r 32cc41c2fdea -r 01b7222c5544 mpn/generic/gcdext_lehmer.c
--- a/mpn/generic/gcdext_lehmer.c	Sun Oct 25 17:49:40 2009 +0100
+++ b/mpn/generic/gcdext_lehmer.c	Wed Dec 16 16:40:06 2009 +0100
@@ -1,6 +1,6 @@
 /* mpn_gcdext -- Extended Greatest Common Divisor.
 
-Copyright 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008 Free Software
+Copyright 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2009 Free Software
 Foundation, Inc.
 
 This file is part of the GNU MP Library.
@@ -119,36 +119,77 @@
 	  un = updated_un;
 	}
     }
-  if (ap[0] == 0)
-    {
-      gp[0] = bp[0];
+  ASSERT_ALWAYS (ap[0] > 0);
+  ASSERT_ALWAYS (bp[0] > 0);
 
-      MPN_NORMALIZE_NOT_ZERO (u0, un);
-      MPN_COPY (up, u0, un);
+  if (ap[0] == bp[0])
+    {
+      int c;
 
-      *usize = -un;
-      return 1;
-    }
-  else if (bp[0] == 0)
-    {
+      /* Which cofactor to return now? Candidates are +u1 and -u0,
+	 depending on which of a and b was most recently reduced,
+	 which we don't keep track of. So compare and get the smallest
+	 one. */
+
       gp[0] = ap[0];
 
-      MPN_NORMALIZE_NOT_ZERO (u1, un);
-      MPN_COPY (up, u1, un);
-
-      *usize = un;
+      MPN_CMP (c, u0, u1, un);
+      ASSERT (c != 0);
+      if (c < 0)
+	{
+	  MPN_NORMALIZE (u0, un);
+	  MPN_COPY (up, u0, un);
+	  *usize = -un;
+	}
+      else
+	{
+	  MPN_NORMALIZE_NOT_ZERO (u1, un);
+	  MPN_COPY (up, u1, un);
+	  *usize = un;
+	}
       return 1;
     }
   else
     {
       mp_limb_t uh, vh;
-      mp_limb_t u;
-      mp_limb_t v;
+      mp_limb_signed_t u;
+      mp_limb_signed_t v;
+      int negate;
 
       gp[0] = mpn_gcdext_1 (&u, &v, ap[0], bp[0]);
 
-      /* Set up = u u1 + v u0. Keep track of size, un grows by one or
+      /* Set up = u u1 - v u0. Keep track of size, un grows by one or
 	 two limbs. */
+
+      if (u == 0)
+	{
+	  ASSERT (v == 1);
+	  MPN_NORMALIZE (u0, un);
+	  MPN_COPY (up, u0, un);
+	  *usize = -un;
+	  return 1;
+	}
+      else if (v == 0)
+	{
+	  ASSERT (u == 1);
+	  MPN_NORMALIZE (u1, un);
+	  MPN_COPY (up, u1, un);
+	  *usize = un;
+	  return 1;
+	}
+      else if (u > 0)
+	{
+	  negate = 0;
+	  ASSERT (v < 0);
+	  v = -v;
+	}
+      else
+	{
+	  negate = 1;
+	  ASSERT (v > 0);
+	  u = -u;
+	}
+
       uh = mpn_mul_1 (up, u1, un, u);
       vh = mpn_addmul_1 (up, u0, un, v);
 
@@ -162,7 +203,7 @@
 
       MPN_NORMALIZE_NOT_ZERO (up, un);
 
-      *usize = un;
+      *usize = negate ? -un : un;
       return 1;
     }
 }
diff -r 32cc41c2fdea -r 01b7222c5544 mpn/generic/gcdext_subdiv_step.c
--- a/mpn/generic/gcdext_subdiv_step.c	Sun Oct 25 17:49:40 2009 +0100
+++ b/mpn/generic/gcdext_subdiv_step.c	Wed Dec 16 16:40:06 2009 +0100
@@ -4,7 +4,7 @@
    SAFE TO REACH THEM THROUGH DOCUMENTED INTERFACES.  IN FACT, IT IS ALMOST
    GUARANTEED THAT THEY'LL CHANGE OR DISAPPEAR IN A FUTURE GNU MP RELEASE.
 
-Copyright 2003, 2004, 2005, 2008 Free Software Foundation, Inc.
+Copyright 2003, 2004, 2005, 2008, 2009 Free Software Foundation, Inc.
 
 This file is part of the GNU MP Library.
 
@@ -74,7 +74,6 @@
     }
   else if (UNLIKELY (bn == 0))
     {
-    return_a:
       MPN_COPY (gp, ap, an);
       *gn = an;
 
@@ -99,7 +98,29 @@
       int c;
       MPN_CMP (c, ap, bp, an);
       if (UNLIKELY (c == 0))
-	goto return_a;
+	{
+	  MPN_COPY (gp, ap, an);
+	  *gn = an;
+
+	  /* Must return the smallest cofactor, +u1 or -u0 */
+	  MPN_CMP (c, u0, u1, un);
+	  ASSERT (c != 0 || (un == 1 && u0[0] == 1 && u1[0] == 1));
+
+	  if (c < 0)
+	    {
+	      MPN_NORMALIZE (u0, un);
+	      MPN_COPY (up, u0, un);
+	      swapped ^= 1;
+	    }
+	  else
+	    {
+	      MPN_NORMALIZE_NOT_ZERO (u1, un);
+	      MPN_COPY (up, u1, un);
+	    }
+
+	  *usizep = swapped ? -un : un;
+	  return 0;
+	}
       else if (c < 0)
 	{
 	  MP_PTR_SWAP (ap, bp);
@@ -127,7 +148,7 @@
       int c;
       MPN_CMP (c, ap, bp, an);
       if (UNLIKELY (c == 0))
-	goto return_a;
+	goto return_b;
       else if (c < 0)
 	{
 	  MP_PTR_SWAP (ap, bp);
diff -r 32cc41c2fdea -r 01b7222c5544 tests/mpz/t-gcd.c
--- a/tests/mpz/t-gcd.c	Sun Oct 25 17:49:40 2009 +0100
+++ b/tests/mpz/t-gcd.c	Wed Dec 16 16:40:06 2009 +0100
@@ -80,7 +80,7 @@
 
 /* Keep one_test's variables global, so that we don't need
    to reinitialize them for each test.  */
-mpz_t gcd1, gcd2, s, t, temp1, temp2;
+mpz_t gcd1, gcd2, s, t, temp1, temp2, temp3;
 
 #if GCD_DC_THRESHOLD > GCDEXT_DC_THRESHOLD
 #define MAX_SCHOENHAGE_THRESHOLD GCD_DC_THRESHOLD
@@ -126,6 +126,7 @@
   mpz_init (gcd2);
   mpz_init (temp1);
   mpz_init (temp2);
+  mpz_init (temp3);
   mpz_init (s);
   mpz_init (t);
 
@@ -218,6 +219,7 @@
   mpz_clear (gcd2);
   mpz_clear (temp1);
   mpz_clear (temp2);
+  mpz_clear (temp3);
   mpz_clear (s);
   mpz_clear (t);
 
@@ -326,7 +328,7 @@
 }
 
 /* Called when g is supposed to be gcd(a,b), and g = s a + t b, for some t.
-   Uses temp1 and temp2 */
+   Uses temp1, temp2 and temp3. */
 static int
 gcdext_valid_p (const mpz_t a, const mpz_t b, const mpz_t g, const mpz_t s)
 {
@@ -350,14 +352,36 @@
   if (mpz_sgn (g) <= 0)
     return 0;
 
-  if (! (mpz_divisible_p (a, g)
-	 && mpz_divisible_p (b, g)
-	 && mpz_cmpabs (s, b) <= 0))
+  mpz_tdiv_qr (temp1, temp3, a, g);
+  if (mpz_sgn (temp3) != 0)
+    return 0;
+
+  mpz_tdiv_qr (temp2, temp3, b, g);
+  if (mpz_sgn (temp3) != 0)
     return 0;
 
-  mpz_mul(temp1, s, a);
-  mpz_sub(temp1, g, temp1);
-  mpz_tdiv_qr(temp1, temp2, temp1, b);
+  /* Require that 2 |s| < |b/g|, or |s| == 1. */
+  if (mpz_cmpabs_ui (s, 1) > 0)
+    {
+      mpz_mul_2exp (temp3, s, 1);
+      if (mpz_cmpabs (temp3, temp2) > 0)
+	return 0;
+    }
+
+  /* Compute the other cofactor. */
+  mpz_mul(temp2, s, a);
+  mpz_sub(temp2, g, temp2);
+  mpz_tdiv_qr(temp2, temp3, temp2, b);
 
-  return mpz_sgn (temp2) == 0 && mpz_cmpabs (temp1, a) <= 0;
+  if (mpz_sgn (temp3) != 0)
+    return 0;
+
+  /* Require that 2 |t| < |a/g| or |t| == 1*/
+  if (mpz_cmpabs_ui (temp2, 1) > 0)
+    {
+      mpz_mul_2exp (temp2, temp2, 1);
+      if (mpz_cmpabs (temp2, temp1) > 0)
+	return 0;
+    }
+  return 1;
 }
# HG changeset patch
# User Niels MÃ¶ller <nisse@lysator.liu.se>
# Date 1260979155 -3600
#      Wed Dec 16 16:59:15 2009 +0100
# Node ID 49c5f72d271ae4733b821660b7138d8e6d3f999a
# Parent  01b7222c5544bf9a0958a280c30ca613636cc95f
Fixed ASSERT in mpn_gcdext_lehmer_n

diff -r 01b7222c5544 -r 49c5f72d271a ChangeLog
--- a/ChangeLog	Wed Dec 16 16:40:06 2009 +0100
+++ b/ChangeLog	Wed Dec 16 16:59:15 2009 +0100
@@ -1,3 +1,11 @@
+2009-12-16  Niels Möller  <nisse@lysator.liu.se>
+
+	* tests/mpz/t-gcd.c (main): Added test case to exercise the
+	unlikely u0 == u1 case in mpn_gcdext_lehmer_n.
+
+	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Get ASSERT
+	right.
+
 2009-12-15  Torbjorn Granlund  <tege@gmplib.org>
 
 	* mpn/generic/gcdext_subdiv_step.c: Get an ASSERT right.
diff -r 01b7222c5544 -r 49c5f72d271a mpn/generic/gcdext_lehmer.c
--- a/mpn/generic/gcdext_lehmer.c	Wed Dec 16 16:40:06 2009 +0100
+++ b/mpn/generic/gcdext_lehmer.c	Wed Dec 16 16:59:15 2009 +0100
@@ -134,7 +134,7 @@
       gp[0] = ap[0];
 
       MPN_CMP (c, u0, u1, un);
-      ASSERT (c != 0);
+      ASSERT (c != 0 || (un == 1 && u0[0] == 1 && u1[0] == 1));
       if (c < 0)
 	{
 	  MPN_NORMALIZE (u0, un);
diff -r 01b7222c5544 -r 49c5f72d271a tests/mpz/t-gcd.c
--- a/tests/mpz/t-gcd.c	Wed Dec 16 16:40:06 2009 +0100
+++ b/tests/mpz/t-gcd.c	Wed Dec 16 16:59:15 2009 +0100
@@ -130,6 +130,13 @@
   mpz_init (s);
   mpz_init (t);
 
+  /* Testcase to exercise the u0 == u1 case in mpn_gcdext_lehmer_n. */
+  mpz_set_ui (op2, GMP_NUMB_MAX);
+  mpz_mul_2exp (op1, op2, 100);
+  mpz_add (op1, op1, op2);
+  mpz_mul_ui (op2, op2, 2);
+  one_test (op1, op2, NULL, -1);
+
 #if 0
   mpz_set_str (op1, "4da8e405e0d2f70d6d679d3de08a5100a81ec2cff40f97b313ae75e1183f1df2b244e194ebb02a4ece50d943640a301f0f6cc7f539117b783c3f3a3f91649f8a00d2e1444d52722810562bce02fccdbbc8fe3276646e306e723dd3b", 16);
   mpz_set_str (op2, "76429e12e4fdd8929d89c21657097fbac09d1dc08cf7f1323a34e78ca34226e1a7a29b86fee0fa7fe2cc2a183d46d50df1fe7029590974ad7da77605f35f902cb8b9b8d22dd881eaae5919675d49a337145a029c3b33fc2b0", 16);
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1260993921 -3600
#      Wed Dec 16 21:05:21 2009 +0100
# Node ID 8563376cb2ff9a6e7471a4fcbb3b81a5099abec2
# Parent  49c5f72d271ae4733b821660b7138d8e6d3f999a
Various fixes.

diff -r 49c5f72d271a -r 8563376cb2ff ChangeLog
--- a/ChangeLog	Wed Dec 16 16:59:15 2009 +0100
+++ b/ChangeLog	Wed Dec 16 21:05:21 2009 +0100
@@ -10,6 +10,11 @@
 
 	* mpn/generic/gcdext_subdiv_step.c: Get an ASSERT right.
 
+2009-12-03  Yann Droneaud  <yann@droneaud.fr>
+
+	* acinclude.m4 ([long long reliability test 1]): Add a "static" for C99
+	inline semantics compatibility.
+
 2009-12-03  Niels Möller  <nisse@lysator.liu.se>
 
 	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Handle v == 0
@@ -35,6 +40,10 @@
 	* mpn/generic/gcdext_1.c (mpn_gcdext_1): Use Euclid's algorithm,
 	and return signed cofactors.
 
+2009-11-09  Torbjorn Granlund  <tege@gmplib.org>
+
+	* acinclude.m4 (GMP_C_FOR_BUILD_ANSI): Avoid poor quoting.
+
 2009-10-23  Torbjorn Granlund  <tege@gmplib.org>
 
 	* mpn/generic/get_d.c: Fix code handling denorms for 64-bit machines.
@@ -80,6 +89,10 @@
 
 	* Makefile.am (dist-hook): Check library version consistency.
 
+2009-05-24  Torbjorn Granlund  <tege@gmplib.org>
+
+	* acinclude.m4 (GMP_ASM_LSYM_PREFIX): Try "$L" too, before "$".
+
 2009-05-12  Torbjorn Granlund  <tege@gmplib.org>
 
 	* Version 4.3.1 released.
diff -r 49c5f72d271a -r 8563376cb2ff acinclude.m4
--- a/acinclude.m4	Wed Dec 16 16:59:15 2009 +0100
+++ b/acinclude.m4	Wed Dec 16 21:05:21 2009 +0100
@@ -1,7 +1,7 @@
 dnl  GMP specific autoconf macros
 
 
-dnl  Copyright 2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software
+dnl  Copyright 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009 Free Software
 dnl  Foundation, Inc.
 dnl
 dnl  This file is part of the GNU MP Library.
@@ -68,7 +68,7 @@
 
 dnl  GMP_REMOVE_FROM_LIST(listvar,item)
 dnl  ----------------------------------
-dnl  Emit code to remove any occurance of ITEM from $LISTVAR.  ITEM can be a
+dnl  Emit code to remove any occurrence of ITEM from $LISTVAR.  ITEM can be a
 dnl  shell expression like $foo if desired.
 
 define(GMP_REMOVE_FROM_LIST,
@@ -189,7 +189,7 @@
 dnl  GMP_COMPARE_GE(A1,B1, A2,B2, ...)
 dnl  ---------------------------------
 dnl  Compare two version numbers A1.A2.etc and B1.B2.etc.  Set
-dnl  $gmp_compare_ge to yes or no accoring to the result.  The A parts
+dnl  $gmp_compare_ge to yes or no according to the result.  The A parts
 dnl  should be variables, the B parts fixed numbers.  As many parts as
 dnl  desired can be included.  An empty string in an A part is taken to be
 dnl  zero, the B parts should be non-empty and non-zero.
@@ -252,7 +252,7 @@
 dnl  file rules.  This doesn't get used by the piecewise linking, so we
 dnl  leave it at the default "cru".
 dnl
-dnl  FIXME: Libtool 1.5.2 has its own arrangments for "cq", but that version
+dnl  FIXME: Libtool 1.5.2 has its own arrangements for "cq", but that version
 dnl  is broken in other ways.  When we can upgrade, remove the forcible
 dnl  AR_FLAGS=cq.
 
@@ -590,7 +590,7 @@
 
 #if defined (__GNUC__) && ! defined (__cplusplus)
 typedef unsigned long long t1;typedef t1*t2;
-__inline__ t1 e(t2 rp,t2 up,int n,t1 v0)
+static __inline__ t1 e(t2 rp,t2 up,int n,t1 v0)
 {t1 c,x,r;int i;if(v0){c=1;for(i=1;i<n;i++){x=up[i];r=x+1;rp[i]=r;}}return c;}
 f(){static const struct{t1 n;t1 src[9];t1 want[9];}d[]={{1,{0},{1}},};t1 got[9];int i;
 for(i=0;i<1;i++){if(e(got,got,9,d[i].n)==0)h();g(i,d[i].src,d[i].n,got,d[i].want,9);if(d[i].n)h();}}
@@ -1811,7 +1811,7 @@
 dnl  have to use it to fill something, hence the .byte in the test.  It's
 dnl  the second .align which provokes the error or warning.
 dnl
-dnl  The warning from solaris 2.8 is supressed to stop anyone worrying that
+dnl  The warning from solaris 2.8 is suppressed to stop anyone worrying that
 dnl  something might be wrong.
 
 AC_DEFUN([GMP_ASM_ALIGN_FILL_0x90],
@@ -2184,7 +2184,7 @@
 AC_CACHE_CHECK([for assembler local label prefix],
                gmp_cv_asm_lsym_prefix,
 [gmp_tmp_pre_appears=yes
-for gmp_tmp_pre in L .L $ L$; do
+for gmp_tmp_pre in L .L $L $ L$; do
   echo "Trying $gmp_tmp_pre" >&AC_FD_CC
   GMP_TRY_ASSEMBLE(
 [	$gmp_cv_asm_text
@@ -3807,7 +3807,7 @@
                gmp_cv_c_for_build_ansi,
 [cat >conftest.c <<EOF
 int
-main (int argc, char *argv[])
+main (int argc, char **argv)
 {
   exit(0);
 }
diff -r 49c5f72d271a -r 8563376cb2ff mpn/generic/toom32_mul.c
--- a/mpn/generic/toom32_mul.c	Wed Dec 16 16:59:15 2009 +0100
+++ b/mpn/generic/toom32_mul.c	Wed Dec 16 21:05:21 2009 +0100
@@ -3,7 +3,7 @@
 
    Contributed to the GNU project by Torbjorn Granlund.
 
-   The idea of applying toom to unbalanced multiplication is due to by Marco
+   The idea of applying toom to unbalanced multiplication is due to Marco
    Bodrato and Alberto Zanoni.
 
    THE FUNCTION IN THIS FILE IS INTERNAL WITH A MUTABLE INTERFACE.  IT IS ONLY
diff -r 49c5f72d271a -r 8563376cb2ff mpn/generic/toom42_mul.c
--- a/mpn/generic/toom42_mul.c	Wed Dec 16 16:59:15 2009 +0100
+++ b/mpn/generic/toom42_mul.c	Wed Dec 16 21:05:21 2009 +0100
@@ -4,7 +4,7 @@
    Contributed to the GNU project by Torbjorn Granlund.
    Additional improvements by Marco Bodrato.
 
-   The idea of applying toom to unbalanced multiplication is due to by Marco
+   The idea of applying toom to unbalanced multiplication is due to Marco
    Bodrato and Alberto Zanoni.
 
    THE FUNCTION IN THIS FILE IS INTERNAL WITH A MUTABLE INTERFACE.  IT IS ONLY
diff -r 49c5f72d271a -r 8563376cb2ff mpn/generic/toom53_mul.c
--- a/mpn/generic/toom53_mul.c	Wed Dec 16 16:59:15 2009 +0100
+++ b/mpn/generic/toom53_mul.c	Wed Dec 16 21:05:21 2009 +0100
@@ -3,7 +3,7 @@
 
    Contributed to the GNU project by Torbjorn Granlund and Marco Bodrato.
 
-   The idea of applying toom to unbalanced multiplication is due to by Marco
+   The idea of applying toom to unbalanced multiplication is due to Marco
    Bodrato and Alberto Zanoni.
 
    THE FUNCTION IN THIS FILE IS INTERNAL WITH A MUTABLE INTERFACE.  IT IS ONLY
diff -r 49c5f72d271a -r 8563376cb2ff mpn/generic/toom62_mul.c
--- a/mpn/generic/toom62_mul.c	Wed Dec 16 16:59:15 2009 +0100
+++ b/mpn/generic/toom62_mul.c	Wed Dec 16 21:05:21 2009 +0100
@@ -3,7 +3,7 @@
 
    Contributed to the GNU project by Torbjorn Granlund and Marco Bodrato.
 
-   The idea of applying toom to unbalanced multiplication is due to by Marco
+   The idea of applying toom to unbalanced multiplication is due to Marco
    Bodrato and Alberto Zanoni.
 
    THE FUNCTION IN THIS FILE IS INTERNAL WITH A MUTABLE INTERFACE.  IT IS ONLY
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1261059485 -3600
#      Thu Dec 17 15:18:05 2009 +0100
# Node ID d558d4b4506d9a46f0bcf56173e3a92618889628
# Parent  8563376cb2ff9a6e7471a4fcbb3b81a5099abec2
Update References section.  Update Contributors section.  Misc updates.

diff -r 8563376cb2ff -r d558d4b4506d ChangeLog
--- a/ChangeLog	Wed Dec 16 21:05:21 2009 +0100
+++ b/ChangeLog	Thu Dec 17 15:18:05 2009 +0100
@@ -1,3 +1,8 @@
+2009-12-17  Torbjorn Granlund  <tege@gmplib.org>
+
+	* doc/gmp.texi: Update References section.  Update Contributors
+	section.  Misc updates.
+
 2009-12-16  Niels Möller  <nisse@lysator.liu.se>
 
 	* tests/mpz/t-gcd.c (main): Added test case to exercise the
@@ -10,11 +15,21 @@
 
 	* mpn/generic/gcdext_subdiv_step.c: Get an ASSERT right.
 
+2009-12-13  Torbjorn Granlund  <tege@gmplib.org>
+
+	* mpn/generic/mul_fft.c (mpn_mul_fft_full): Handle carry-out from 2nd
+	mpn_mul_fft, add an ASSERT for the 1st mpn_mul_fft.  Replace some
+	comments on cc's range with ASSERTs.
+
 2009-12-03  Yann Droneaud  <yann@droneaud.fr>
 
 	* acinclude.m4 ([long long reliability test 1]): Add a "static" for C99
 	inline semantics compatibility.
 
+2009-12-03  Torbjorn Granlund  <tege@gmplib.org>
+
+	* mpn/generic/gcdext.c: Add a TMP_FREE.
+
 2009-12-03  Niels Möller  <nisse@lysator.liu.se>
 
 	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Handle v == 0
@@ -40,10 +55,19 @@
 	* mpn/generic/gcdext_1.c (mpn_gcdext_1): Use Euclid's algorithm,
 	and return signed cofactors.
 
+2009-12-02  Torbjorn Granlund  <tege@gmplib.org>
+
+	* doc/gmp.texi (Low-level Functions): Document mpn_sqr_n.
+
 2009-11-09  Torbjorn Granlund  <tege@gmplib.org>
 
 	* acinclude.m4 (GMP_C_FOR_BUILD_ANSI): Avoid poor quoting.
 
+2009-10-29  Torbjorn Granlund  <tege@gmplib.org>
+
+	* mpn/generic/mul_fft.c (mpn_mul_fft): Make it return high limb.
+	(mpn_mul_fft_internal): Likewise.
+
 2009-10-23  Torbjorn Granlund  <tege@gmplib.org>
 
 	* mpn/generic/get_d.c: Fix code handling denorms for 64-bit machines.
@@ -83,6 +107,13 @@
 
 	* mpn/generic/mul.c: Use TMP_ALLOC_LIMBS for unbounded allocations.
 
+2009-06-05  Torbjorn Granlund  <tege@gmplib.org>
+
+	* mpn/generic/mul_fft.c (FFT_TABLE2_SIZE): Default to 200.
+	(MUL_FFT_TABLE2_SIZE, SQR_FFT_TABLE2_SIZE): Let these decide
+	FFT_TABLE2_SIZE if they are defined.
+	(struct nk): Use bit field.
+
 2009-06-01  Torbjorn Granlund  <tege@gmplib.org>
 
 	* mpz/remove.c: Correctly handle multiplicity that does not fit an int.
diff -r 8563376cb2ff -r d558d4b4506d doc/gmp.texi
--- a/doc/gmp.texi	Wed Dec 16 21:05:21 2009 +0100
+++ b/doc/gmp.texi	Thu Dec 17 15:18:05 2009 +0100
@@ -18,7 +18,7 @@
 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.
 
 Permission is granted to copy, distribute and/or modify this document under
-the terms of the GNU Free Documentation License, Version 1.2 or any later
+the terms of the GNU Free Documentation License, Version 1.3 or any later
 version published by the Free Software Foundation; with no Invariant Sections,
 with the Front-Cover Texts being ``A GNU Manual'', and with the Back-Cover
 Texts being ``You have freedom to copy and modify this GNU Manual, like GNU
@@ -91,7 +91,7 @@
 @subtitle Edition @value{EDITION}
 @subtitle @value{UPDATED}
 
-@author by The GMP developers
+@author by the GMP developers
 @c @email{tege@@gmplib.org}
 
 @c Include the Distribution inside the titlepage so
@@ -2994,31 +2994,34 @@
 As you can see, you can store new values any number of times, once an
 object is initialized.
 
-@deftypefun void mpz_init (mpz_t @var{integer})
-Initialize @var{integer}, and set its value to 0.
-@end deftypefun
-
-@deftypefun void mpz_init2 (mpz_t @var{integer}, unsigned long @var{n})
-Initialize @var{integer}, with space for @var{n} bits, and set its value to 0.
-
-@var{n} is only the initial space, @var{integer} will grow automatically in
+@deftypefun void mpz_init (mpz_t @var{x})
+Initialize @var{x}, and set its value to 0.
+@end deftypefun
+
+@deftypefun void mpz_init2 (mpz_t @var{x}, unsigned long @var{n})
+Initialize @var{x}, with space for @var{n}-bit numbers, and set its value to 0.
+Calling this function instead of @code{mpz_init} or @code{mpz_inits} is never
+necessary; reallocation is handled automatically by GMP when needed.
+
+@var{n} is only the initial space, @var{x} will grow automatically in
 the normal way, if necessary, for subsequent values stored.  @code{mpz_init2}
 makes it possible to avoid such reallocations if a maximum size is known in
 advance.
 @end deftypefun
 
-@deftypefun void mpz_clear (mpz_t @var{integer})
-Free the space occupied by @var{integer}.  Call this function for all
-@code{mpz_t} variables when you are done with them.
-@end deftypefun
-
-@deftypefun void mpz_realloc2 (mpz_t @var{integer}, unsigned long @var{n})
-Change the space allocated for @var{integer} to @var{n} bits.  The value in
-@var{integer} is preserved if it fits, or is set to 0 if not.
-
-This function can be used to increase the space for a variable in order to
-avoid repeated automatic reallocations, or to decrease it to give memory back
-to the heap.
+@deftypefun void mpz_clear (mpz_t @var{x})
+Free the space occupied by @var{x}.  Call this function for all @code{mpz_t}
+variables when you are done with them.
+@end deftypefun
+
+@deftypefun void mpz_realloc2 (mpz_t @var{x}, unsigned long @var{n})
+Change the space allocated for @var{x} to @var{n} bits.  The value in @var{x}
+is preserved if it fits, or is set to 0 if not.
+
+Calling this function is never necessary; reallocation is handled automatically
+by GMP when needed.  But this function can be used to increase the space for a
+variable in order to avoid repeated automatic reallocations, or to decrease it
+to give memory back to the heap.
 @end deftypefun
 
 
@@ -3939,7 +3942,7 @@
 
 @example
 unsigned long  a[20];
-mpz_t          z;
+/* Initialize @var{z} and @var{a} */
 mpz_import (z, 20, 1, sizeof(a[0]), 0, 0, a);
 @end example
 
@@ -4172,15 +4175,15 @@
 @cindex Rational initialization functions
 @cindex Initialization functions
 
-@deftypefun void mpq_init (mpq_t @var{dest_rational})
-Initialize @var{dest_rational} and set it to 0/1.  Each variable should
-normally only be initialized once, or at least cleared out (using the function
-@code{mpq_clear}) between each initialization.
-@end deftypefun
-
-@deftypefun void mpq_clear (mpq_t @var{rational_number})
-Free the space occupied by @var{rational_number}.  Make sure to call this
-function for all @code{mpq_t} variables when you are done with them.
+@deftypefun void mpq_init (mpq_t @var{x})
+Initialize @var{x} and set it to 0/1.  Each variable should normally only be
+initialized once, or at least cleared out (using the function @code{mpq_clear})
+between each initialization.
+@end deftypefun
+
+@deftypefun void mpq_clear (mpq_t @var{x})
+Free the space occupied by @var{x}.  Make sure to call this function for all
+@code{mpq_t} variables when you are done with them.
 @end deftypefun
 
 @deftypefun void mpq_set (mpq_t @var{rop}, mpq_t @var{op})
@@ -5130,6 +5133,29 @@
 The destination has to have space for 2*@var{n} limbs, even if the product's
 most significant limb is zero.  No overlap is permitted between the
 destination and either source.
+
+If the two input operands are the same, use @code{mpn_sqr_n}.
+@end deftypefun
+
+@deftypefun mp_limb_t mpn_mul (mp_limb_t *@var{rp}, const mp_limb_t *@var{s1p}, mp_size_t @var{s1n}, const mp_limb_t *@var{s2p}, mp_size_t @var{s2n})
+Multiply @{@var{s1p}, @var{s1n}@} and @{@var{s2p}, @var{s2n}@}, and write the
+(@var{s1n}+@var{s2n})-limb result to @var{rp}.  Return the most significant
+limb of the result.
+
+The destination has to have space for @var{s1n} + @var{s2n} limbs, even if the
+product's most significant limb is zero.  No overlap is permitted between the
+destination and either source.
+
+This function requires that @var{s1n} is greater than or equal to @var{s2n}.
+@end deftypefun
+
+@deftypefun void mpn_sqr_n (mp_limb_t *@var{rp}, const mp_limb_t *@var{s1p}, mp_size_t @var{n})
+Compute the square of @{@var{s1p}, @var{n}@} and write the 2*@var{n}-limb
+result to @var{rp}.
+
+The destination has to have space for 2*@var{n} limbs, even if the result's
+most significant limb is zero.  No overlap is permitted between the
+destination and the source.
 @end deftypefun
 
 @deftypefun mp_limb_t mpn_mul_1 (mp_limb_t *@var{rp}, const mp_limb_t *@var{s1p}, mp_size_t @var{n}, mp_limb_t @var{s2limb})
@@ -5168,17 +5194,6 @@
 in assembly for most CPUs.
 @end deftypefun
 
-@deftypefun mp_limb_t mpn_mul (mp_limb_t *@var{rp}, const mp_limb_t *@var{s1p}, mp_size_t @var{s1n}, const mp_limb_t *@var{s2p}, mp_size_t @var{s2n})
-Multiply @{@var{s1p}, @var{s1n}@} and @{@var{s2p}, @var{s2n}@}, and write the
-result to @var{rp}.  Return the most significant limb of the result.
-
-The destination has to have space for @var{s1n} + @var{s2n} limbs, even if the
-result might be one limb smaller.
-
-This function requires that @var{s1n} is greater than or equal to
-@var{s2n}.  The destination must be distinct from both input operands.
-@end deftypefun
-
 @deftypefun void mpn_tdiv_qr (mp_limb_t *@var{qp}, mp_limb_t *@var{rp}, mp_size_t @var{qxn}, const mp_limb_t *@var{np}, mp_size_t @var{nn}, const mp_limb_t *@var{dp}, mp_size_t @var{dn})
 Divide @{@var{np}, @var{nn}@} by @{@var{dp}, @var{dn}@} and put the quotient
 at @{@var{qp}, @var{nn}@minus{}@var{dn}+1@} and the remainder at @{@var{rp},
@@ -8062,14 +8077,14 @@
 high to low, either with a hardware divide instruction or a multiplication by
 inverse, whichever is best on a given CPU.
 
-The multiply by inverse follows section 8 of ``Division by Invariant Integers
-using Multiplication'' by Granlund and Montgomery (@pxref{References}) and is
-implemented as @code{udiv_qrnnd_preinv} in @file{gmp-impl.h}.  The idea is to
-have a fixed-point approximation to @math{1/d} (see @code{invert_limb}) and
-then multiply by the high limb (plus one bit) of the dividend to get a
-quotient @math{q}.  With @math{d} normalized (high bit set), @math{q} is no
-more than 1 too small.  Subtracting @m{qd,q*d} from the dividend gives a
-remainder, and reveals whether @math{q} or @math{q-1} is correct.
+The multiply by inverse follows ``Improved division by invariant integers'' by
+M@"oller and Granlund (@pxref{References}) and is implemented as
+@code{udiv_qrnnd_preinv} in @file{gmp-impl.h}.  The idea is to have a
+fixed-point approximation to @math{1/d} (see @code{invert_limb}) and then
+multiply by the high limb (plus one bit) of the dividend to get a quotient
+@math{q}.  With @math{d} normalized (high bit set), @math{q} is no more than 1
+too small.  Subtracting @m{qd,q*d} from the dividend gives a remainder, and
+reveals whether @math{q} or @math{q-1} is correct.
 
 The result is a division done with two multiplications and four or five
 arithmetic operations.  On CPUs with low latency multipliers this can be much
@@ -9482,7 +9497,7 @@
 likewise @math{p48} and @math{r48}.  @math{p00} and @math{p16} can be summed
 with @math{r64} and @math{r80} from the previous iteration.
 
-For each loop then, four 49-bit quantities are transfered to the integer unit,
+For each loop then, four 49-bit quantities are transferred to the integer unit,
 aligned as follows,
 
 @tex
@@ -10208,7 +10223,7 @@
 
 Ken Weber (Kent State University, Universidade Federal do Rio Grande do Sul)
 contributed @code{mpz_gcd}, @code{mpz_divexact}, @code{mpn_gcd}, and
-@code{mpn_bdivmod}, partially supported by CNPq (Brazil) grant 301314194-2.c
+@code{mpn_bdivmod}, partially supported by CNPq (Brazil) grant 301314194-2.
 
 Per Bothner of Cygnus Support helped to set up GMP to use Cygnus' configure.
 He has also made valuable suggestions and tested numerous intermediary
@@ -10264,14 +10279,13 @@
 multiplication.  Marco also helped implement the new Toom multiply code for
 GMP 4.3.
 
-David Harvey suggested the internal function @code{mpn_bdiv_dbm1},
-implementing division relevant to Toom multiplication.  He also worked on
-fast assembly sequences, in particular on a fast AMD64
-@code{mpn_mul_basecase}.
+David Harvey suggested the internal function @code{mpn_bdiv_dbm1}, implementing
+division relevant to Toom multiplication.  He also worked on fast assembly
+sequences, in particular on a fast AMD64 @code{mpn_mul_basecase}.
 
 (This list is chronological, not ordered after significance.  If you have
-contributed to GMP but are not listed above, please tell @email{tege@@gmplib.org}
-about the omission!)
+contributed to GMP but are not listed above, please tell
+@email{gmp-devel@@gmplib.org} about the omission!)
 
 The development of floating point functions of GNU MP 2, were supported in part
 by the ESPRIT-BRA (Basic Research Activities) 6846 project POSSO (POlynomial
@@ -10303,6 +10317,11 @@
 Analytic Number Theory and Computational Complexity'', Wiley, 1998.
 
 @item
+Richard Crandall and Carl Pomerance, ``Prime Numbers: A Computational
+Perspective'', 2nd edition, Springer-Verlag, 2005.
+@texlinebreak{} @uref{http://math.dartmouth.edu/~carlp/}
+
+@item
 Henri Cohen, ``A Course in Computational Algebraic Number Theory'', Graduate
 Texts in Mathematics number 138, Springer-Verlag, 1993.
 @texlinebreak{} @uref{http://www.math.u-bordeaux.fr/~cohen/}
@@ -10321,9 +10340,10 @@
 Applied Cryptography'', @uref{http://www.cacr.math.uwaterloo.ca/hac/}
 
 @item
-Richard M. Stallman, ``Using and Porting GCC'', Free Software Foundation, 1999,
-available online @uref{http://gcc.gnu.org/onlinedocs/}, and in
-the GCC package @uref{ftp://ftp.gnu.org/gnu/gcc/}
+Richard M. Stallman and the GCC Developer Community, ``Using the GNU Compiler
+Collection'', Free Software Foundation, 2008, available online
+@uref{http://gcc.gnu.org/onlinedocs/}, and in the GCC package
+@uref{ftp://ftp.gnu.org/gnu/gcc/}
 @end itemize
 
 @section Papers
@@ -10347,6 +10367,14 @@
 (and .psl.gz).
 
 @item
+Niels M"oller and Torbj@"orn Granlund, ``Improved division by invariant
+integers'', to appear.
+
+@item
+Torbj@"orn Granlund and Niels M"oller, ``Division of integers large and
+small'', to appear.
+
+@item
 Tudor Jebelean,
 ``An algorithm for exact division'',
 Journal of Symbolic Computation,
@@ -10435,7 +10463,7 @@
 @cindex GNU Free Documentation License
 @cindex Free Documentation License
 @cindex Documentation license
-@include fdl.texi
+@include fdl-1.3.texi
 
 
 @node Concept Index, Function Index, GNU Free Documentation License, Top
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1261059529 -3600
#      Thu Dec 17 15:18:49 2009 +0100
# Node ID 6e0b9feebfb31a42be6b946cb7803aa7a9a1adbd
# Parent  d558d4b4506d9a46f0bcf56173e3a92618889628
Upgrade FDL version.

diff -r d558d4b4506d -r 6e0b9feebfb3 doc/fdl-1.3.texi
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/doc/fdl-1.3.texi	Thu Dec 17 15:18:49 2009 +0100
@@ -0,0 +1,506 @@
+@c The GNU Free Documentation License.
+@center Version 1.3, 3 November 2008
+
+@c This file is intended to be included within another document,
+@c hence no sectioning command or @node.
+
+@display
+Copyright @copyright{} 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
+@uref{http://fsf.org/}
+
+Everyone is permitted to copy and distribute verbatim copies
+of this license document, but changing it is not allowed.
+@end display
+
+@enumerate 0
+@item
+PREAMBLE
+
+The purpose of this License is to make a manual, textbook, or other
+functional and useful document @dfn{free} in the sense of freedom: to
+assure everyone the effective freedom to copy and redistribute it,
+with or without modifying it, either commercially or noncommercially.
+Secondarily, this License preserves for the author and publisher a way
+to get credit for their work, while not being considered responsible
+for modifications made by others.
+
+This License is a kind of ``copyleft'', which means that derivative
+works of the document must themselves be free in the same sense.  It
+complements the GNU General Public License, which is a copyleft
+license designed for free software.
+
+We have designed this License in order to use it for manuals for free
+software, because free software needs free documentation: a free
+program should come with manuals providing the same freedoms that the
+software does.  But this License is not limited to software manuals;
+it can be used for any textual work, regardless of subject matter or
+whether it is published as a printed book.  We recommend this License
+principally for works whose purpose is instruction or reference.
+
+@item
+APPLICABILITY AND DEFINITIONS
+
+This License applies to any manual or other work, in any medium, that
+contains a notice placed by the copyright holder saying it can be
+distributed under the terms of this License.  Such a notice grants a
+world-wide, royalty-free license, unlimited in duration, to use that
+work under the conditions stated herein.  The ``Document'', below,
+refers to any such manual or work.  Any member of the public is a
+licensee, and is addressed as ``you''.  You accept the license if you
+copy, modify or distribute the work in a way requiring permission
+under copyright law.
+
+A ``Modified Version'' of the Document means any work containing the
+Document or a portion of it, either copied verbatim, or with
+modifications and/or translated into another language.
+
+A ``Secondary Section'' is a named appendix or a front-matter section
+of the Document that deals exclusively with the relationship of the
+publishers or authors of the Document to the Document's overall
+subject (or to related matters) and contains nothing that could fall
+directly within that overall subject.  (Thus, if the Document is in
+part a textbook of mathematics, a Secondary Section may not explain
+any mathematics.)  The relationship could be a matter of historical
+connection with the subject or with related matters, or of legal,
+commercial, philosophical, ethical or political position regarding
+them.
+
+The ``Invariant Sections'' are certain Secondary Sections whose titles
+are designated, as being those of Invariant Sections, in the notice
+that says that the Document is released under this License.  If a
+section does not fit the above definition of Secondary then it is not
+allowed to be designated as Invariant.  The Document may contain zero
+Invariant Sections.  If the Document does not identify any Invariant
+Sections then there are none.
+
+The ``Cover Texts'' are certain short passages of text that are listed,
+as Front-Cover Texts or Back-Cover Texts, in the notice that says that
+the Document is released under this License.  A Front-Cover Text may
+be at most 5 words, and a Back-Cover Text may be at most 25 words.
+
+A ``Transparent'' copy of the Document means a machine-readable copy,
+represented in a format whose specification is available to the
+general public, that is suitable for revising the document
+straightforwardly with generic text editors or (for images composed of
+pixels) generic paint programs or (for drawings) some widely available
+drawing editor, and that is suitable for input to text formatters or
+for automatic translation to a variety of formats suitable for input
+to text formatters.  A copy made in an otherwise Transparent file
+format whose markup, or absence of markup, has been arranged to thwart
+or discourage subsequent modification by readers is not Transparent.
+An image format is not Transparent if used for any substantial amount
+of text.  A copy that is not ``Transparent'' is called ``Opaque''.
+
+Examples of suitable formats for Transparent copies include plain
+@sc{ascii} without markup, Texinfo input format, La@TeX{} input
+format, @acronym{SGML} or @acronym{XML} using a publicly available
+@acronym{DTD}, and standard-conforming simple @acronym{HTML},
+PostScript or @acronym{PDF} designed for human modification.  Examples
+of transparent image formats include @acronym{PNG}, @acronym{XCF} and
+@acronym{JPG}.  Opaque formats include proprietary formats that can be
+read and edited only by proprietary word processors, @acronym{SGML} or
+@acronym{XML} for which the @acronym{DTD} and/or processing tools are
+not generally available, and the machine-generated @acronym{HTML},
+PostScript or @acronym{PDF} produced by some word processors for
+output purposes only.
+
+The ``Title Page'' means, for a printed book, the title page itself,
+plus such following pages as are needed to hold, legibly, the material
+this License requires to appear in the title page.  For works in
+formats which do not have any title page as such, ``Title Page'' means
+the text near the most prominent appearance of the work's title,
+preceding the beginning of the body of the text.
+
+The ``publisher'' means any person or entity that distributes copies
+of the Document to the public.
+
+A section ``Entitled XYZ'' means a named subunit of the Document whose
+title either is precisely XYZ or contains XYZ in parentheses following
+text that translates XYZ in another language.  (Here XYZ stands for a
+specific section name mentioned below, such as ``Acknowledgements'',
+``Dedications'', ``Endorsements'', or ``History''.)  To ``Preserve the Title''
+of such a section when you modify the Document means that it remains a
+section ``Entitled XYZ'' according to this definition.
+
+The Document may include Warranty Disclaimers next to the notice which
+states that this License applies to the Document.  These Warranty
+Disclaimers are considered to be included by reference in this
+License, but only as regards disclaiming warranties: any other
+implication that these Warranty Disclaimers may have is void and has
+no effect on the meaning of this License.
+
+@item
+VERBATIM COPYING
+
+You may copy and distribute the Document in any medium, either
+commercially or noncommercially, provided that this License, the
+copyright notices, and the license notice saying this License applies
+to the Document are reproduced in all copies, and that you add no other
+conditions whatsoever to those of this License.  You may not use
+technical measures to obstruct or control the reading or further
+copying of the copies you make or distribute.  However, you may accept
+compensation in exchange for copies.  If you distribute a large enough
+number of copies you must also follow the conditions in section 3.
+
+You may also lend copies, under the same conditions stated above, and
+you may publicly display copies.
+
+@item
+COPYING IN QUANTITY
+
+If you publish printed copies (or copies in media that commonly have
+printed covers) of the Document, numbering more than 100, and the
+Document's license notice requires Cover Texts, you must enclose the
+copies in covers that carry, clearly and legibly, all these Cover
+Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
+the back cover.  Both covers must also clearly and legibly identify
+you as the publisher of these copies.  The front cover must present
+the full title with all words of the title equally prominent and
+visible.  You may add other material on the covers in addition.
+Copying with changes limited to the covers, as long as they preserve
+the title of the Document and satisfy these conditions, can be treated
+as verbatim copying in other respects.
+
+If the required texts for either cover are too voluminous to fit
+legibly, you should put the first ones listed (as many as fit
+reasonably) on the actual cover, and continue the rest onto adjacent
+pages.
+
+If you publish or distribute Opaque copies of the Document numbering
+more than 100, you must either include a machine-readable Transparent
+copy along with each Opaque copy, or state in or with each Opaque copy
+a computer-network location from which the general network-using
+public has access to download using public-standard network protocols
+a complete Transparent copy of the Document, free of added material.
+If you use the latter option, you must take reasonably prudent steps,
+when you begin distribution of Opaque copies in quantity, to ensure
+that this Transparent copy will remain thus accessible at the stated
+location until at least one year after the last time you distribute an
+Opaque copy (directly or through your agents or retailers) of that
+edition to the public.
+
+It is requested, but not required, that you contact the authors of the
+Document well before redistributing any large number of copies, to give
+them a chance to provide you with an updated version of the Document.
+
+@item
+MODIFICATIONS
+
+You may copy and distribute a Modified Version of the Document under
+the conditions of sections 2 and 3 above, provided that you release
+the Modified Version under precisely this License, with the Modified
+Version filling the role of the Document, thus licensing distribution
+and modification of the Modified Version to whoever possesses a copy
+of it.  In addition, you must do these things in the Modified Version:
+
+@enumerate A
+@item
+Use in the Title Page (and on the covers, if any) a title distinct
+from that of the Document, and from those of previous versions
+(which should, if there were any, be listed in the History section
+of the Document).  You may use the same title as a previous version
+if the original publisher of that version gives permission.
+
+@item
+List on the Title Page, as authors, one or more persons or entities
+responsible for authorship of the modifications in the Modified
+Version, together with at least five of the principal authors of the
+Document (all of its principal authors, if it has fewer than five),
+unless they release you from this requirement.
+
+@item
+State on the Title page the name of the publisher of the
+Modified Version, as the publisher.
+
+@item
+Preserve all the copyright notices of the Document.
+
+@item
+Add an appropriate copyright notice for your modifications
+adjacent to the other copyright notices.
+
+@item
+Include, immediately after the copyright notices, a license notice
+giving the public permission to use the Modified Version under the
+terms of this License, in the form shown in the Addendum below.
+
+@item
+Preserve in that license notice the full lists of Invariant Sections
+and required Cover Texts given in the Document's license notice.
+
+@item
+Include an unaltered copy of this License.
+
+@item
+Preserve the section Entitled ``History'', Preserve its Title, and add
+to it an item stating at least the title, year, new authors, and
+publisher of the Modified Version as given on the Title Page.  If
+there is no section Entitled ``History'' in the Document, create one
+stating the title, year, authors, and publisher of the Document as
+given on its Title Page, then add an item describing the Modified
+Version as stated in the previous sentence.
+
+@item
+Preserve the network location, if any, given in the Document for
+public access to a Transparent copy of the Document, and likewise
+the network locations given in the Document for previous versions
+it was based on.  These may be placed in the ``History'' section.
+You may omit a network location for a work that was published at
+least four years before the Document itself, or if the original
+publisher of the version it refers to gives permission.
+
+@item
+For any section Entitled ``Acknowledgements'' or ``Dedications'', Preserve
+the Title of the section, and preserve in the section all the
+substance and tone of each of the contributor acknowledgements and/or
+dedications given therein.
+
+@item
+Preserve all the Invariant Sections of the Document,
+unaltered in their text and in their titles.  Section numbers
+or the equivalent are not considered part of the section titles.
+
+@item
+Delete any section Entitled ``Endorsements''.  Such a section
+may not be included in the Modified Version.
+
+@item
+Do not retitle any existing section to be Entitled ``Endorsements'' or
+to conflict in title with any Invariant Section.
+
+@item
+Preserve any Warranty Disclaimers.
+@end enumerate
+
+If the Modified Version includes new front-matter sections or
+appendices that qualify as Secondary Sections and contain no material
+copied from the Document, you may at your option designate some or all
+of these sections as invariant.  To do this, add their titles to the
+list of Invariant Sections in the Modified Version's license notice.
+These titles must be distinct from any other section titles.
+
+You may add a section Entitled ``Endorsements'', provided it contains
+nothing but endorsements of your Modified Version by various
+parties---for example, statements of peer review or that the text has
+been approved by an organization as the authoritative definition of a
+standard.
+
+You may add a passage of up to five words as a Front-Cover Text, and a
+passage of up to 25 words as a Back-Cover Text, to the end of the list
+of Cover Texts in the Modified Version.  Only one passage of
+Front-Cover Text and one of Back-Cover Text may be added by (or
+through arrangements made by) any one entity.  If the Document already
+includes a cover text for the same cover, previously added by you or
+by arrangement made by the same entity you are acting on behalf of,
+you may not add another; but you may replace the old one, on explicit
+permission from the previous publisher that added the old one.
+
+The author(s) and publisher(s) of the Document do not by this License
+give permission to use their names for publicity for or to assert or
+imply endorsement of any Modified Version.
+
+@item
+COMBINING DOCUMENTS
+
+You may combine the Document with other documents released under this
+License, under the terms defined in section 4 above for modified
+versions, provided that you include in the combination all of the
+Invariant Sections of all of the original documents, unmodified, and
+list them all as Invariant Sections of your combined work in its
+license notice, and that you preserve all their Warranty Disclaimers.
+
+The combined work need only contain one copy of this License, and
+multiple identical Invariant Sections may be replaced with a single
+copy.  If there are multiple Invariant Sections with the same name but
+different contents, make the title of each such section unique by
+adding at the end of it, in parentheses, the name of the original
+author or publisher of that section if known, or else a unique number.
+Make the same adjustment to the section titles in the list of
+Invariant Sections in the license notice of the combined work.
+
+In the combination, you must combine any sections Entitled ``History''
+in the various original documents, forming one section Entitled
+``History''; likewise combine any sections Entitled ``Acknowledgements'',
+and any sections Entitled ``Dedications''.  You must delete all
+sections Entitled ``Endorsements.''
+
+@item
+COLLECTIONS OF DOCUMENTS
+
+You may make a collection consisting of the Document and other documents
+released under this License, and replace the individual copies of this
+License in the various documents with a single copy that is included in
+the collection, provided that you follow the rules of this License for
+verbatim copying of each of the documents in all other respects.
+
+You may extract a single document from such a collection, and distribute
+it individually under this License, provided you insert a copy of this
+License into the extracted document, and follow this License in all
+other respects regarding verbatim copying of that document.
+
+@item
+AGGREGATION WITH INDEPENDENT WORKS
+
+A compilation of the Document or its derivatives with other separate
+and independent documents or works, in or on a volume of a storage or
+distribution medium, is called an ``aggregate'' if the copyright
+resulting from the compilation is not used to limit the legal rights
+of the compilation's users beyond what the individual works permit.
+When the Document is included in an aggregate, this License does not
+apply to the other works in the aggregate which are not themselves
+derivative works of the Document.
+
+If the Cover Text requirement of section 3 is applicable to these
+copies of the Document, then if the Document is less than one half of
+the entire aggregate, the Document's Cover Texts may be placed on
+covers that bracket the Document within the aggregate, or the
+electronic equivalent of covers if the Document is in electronic form.
+Otherwise they must appear on printed covers that bracket the whole
+aggregate.
+
+@item
+TRANSLATION
+
+Translation is considered a kind of modification, so you may
+distribute translations of the Document under the terms of section 4.
+Replacing Invariant Sections with translations requires special
+permission from their copyright holders, but you may include
+translations of some or all Invariant Sections in addition to the
+original versions of these Invariant Sections.  You may include a
+translation of this License, and all the license notices in the
+Document, and any Warranty Disclaimers, provided that you also include
+the original English version of this License and the original versions
+of those notices and disclaimers.  In case of a disagreement between
+the translation and the original version of this License or a notice
+or disclaimer, the original version will prevail.
+
+If a section in the Document is Entitled ``Acknowledgements'',
+``Dedications'', or ``History'', the requirement (section 4) to Preserve
+its Title (section 1) will typically require changing the actual
+title.
+
+@item
+TERMINATION
+
+You may not copy, modify, sublicense, or distribute the Document
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense, or distribute it is void, and
+will automatically terminate your rights under this License.
+
+However, if you cease all violation of this License, then your license
+from a particular copyright holder is reinstated (a) provisionally,
+unless and until the copyright holder explicitly and finally
+terminates your license, and (b) permanently, if the copyright holder
+fails to notify you of the violation by some reasonable means prior to
+60 days after the cessation.
+
+Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, receipt of a copy of some or all of the same material does
+not give you any rights to use it.
+
+@item
+FUTURE REVISIONS OF THIS LICENSE
+
+The Free Software Foundation may publish new, revised versions
+of the GNU Free Documentation License from time to time.  Such new
+versions will be similar in spirit to the present version, but may
+differ in detail to address new problems or concerns.  See
+@uref{http://www.gnu.org/copyleft/}.
+
+Each version of the License is given a distinguishing version number.
+If the Document specifies that a particular numbered version of this
+License ``or any later version'' applies to it, you have the option of
+following the terms and conditions either of that specified version or
+of any later version that has been published (not as a draft) by the
+Free Software Foundation.  If the Document does not specify a version
+number of this License, you may choose any version ever published (not
+as a draft) by the Free Software Foundation.  If the Document
+specifies that a proxy can decide which future versions of this
+License can be used, that proxy's public statement of acceptance of a
+version permanently authorizes you to choose that version for the
+Document.
+
+@item
+RELICENSING
+
+``Massive Multiauthor Collaboration Site'' (or ``MMC Site'') means any
+World Wide Web server that publishes copyrightable works and also
+provides prominent facilities for anybody to edit those works.  A
+public wiki that anybody can edit is an example of such a server.  A
+``Massive Multiauthor Collaboration'' (or ``MMC'') contained in the
+site means any set of copyrightable works thus published on the MMC
+site.
+
+``CC-BY-SA'' means the Creative Commons Attribution-Share Alike 3.0
+license published by Creative Commons Corporation, a not-for-profit
+corporation with a principal place of business in San Francisco,
+California, as well as future copyleft versions of that license
+published by that same organization.
+
+``Incorporate'' means to publish or republish a Document, in whole or
+in part, as part of another Document.
+
+An MMC is ``eligible for relicensing'' if it is licensed under this
+License, and if all works that were first published under this License
+somewhere other than this MMC, and subsequently incorporated in whole
+or in part into the MMC, (1) had no cover texts or invariant sections,
+and (2) were thus incorporated prior to November 1, 2008.
+
+The operator of an MMC Site may republish an MMC contained in the site
+under CC-BY-SA on the same site at any time before August 1, 2009,
+provided the MMC is eligible for relicensing.
+
+@end enumerate
+
+@page
+@heading ADDENDUM: How to use this License for your documents
+
+To use this License in a document you have written, include a copy of
+the License in the document and put the following copyright and
+license notices just after the title page:
+
+@smallexample
+@group
+  Copyright (C)  @var{year}  @var{your name}.
+  Permission is granted to copy, distribute and/or modify this document
+  under the terms of the GNU Free Documentation License, Version 1.3
+  or any later version published by the Free Software Foundation;
+  with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
+  Texts.  A copy of the license is included in the section entitled ``GNU
+  Free Documentation License''.
+@end group
+@end smallexample
+
+If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
+replace the ``with@dots{}Texts.'' line with this:
+
+@smallexample
+@group
+    with the Invariant Sections being @var{list their titles}, with
+    the Front-Cover Texts being @var{list}, and with the Back-Cover Texts
+    being @var{list}.
+@end group
+@end smallexample
+
+If you have Invariant Sections without Cover Texts, or some other
+combination of the three, merge those two alternatives to suit the
+situation.
+
+If your document contains nontrivial examples of program code, we
+recommend releasing these examples in parallel under your choice of
+free software license, such as the GNU General Public License,
+to permit their use in free software.
+
+@c Local Variables:
+@c ispell-local-pdict: "ispell-dict"
+@c End:
+
diff -r d558d4b4506d -r 6e0b9feebfb3 doc/fdl.texi
--- a/doc/fdl.texi	Thu Dec 17 15:18:05 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,457 +0,0 @@
-@c GMP tweak: Have this in gmp.texi to help texinfo-mode,
-@c and we prefer @appendix too.
-@c
-@c @node GNU Free Documentation License
-@c @appendixsec GNU Free Documentation License
-
-@cindex FDL, GNU Free Documentation License
-@center Version 1.2, November 2002
-
-@display
-Copyright @copyright{} 2000,2001,2002 Free Software Foundation, Inc.
-51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
-
-Everyone is permitted to copy and distribute verbatim copies
-of this license document, but changing it is not allowed.
-@end display
-
-@enumerate 0
-@item
-PREAMBLE
-
-The purpose of this License is to make a manual, textbook, or other
-functional and useful document @dfn{free} in the sense of freedom: to
-assure everyone the effective freedom to copy and redistribute it,
-with or without modifying it, either commercially or noncommercially.
-Secondarily, this License preserves for the author and publisher a way
-to get credit for their work, while not being considered responsible
-for modifications made by others.
-
-This License is a kind of ``copyleft'', which means that derivative
-works of the document must themselves be free in the same sense.  It
-complements the GNU General Public License, which is a copyleft
-license designed for free software.
-
-We have designed this License in order to use it for manuals for free
-software, because free software needs free documentation: a free
-program should come with manuals providing the same freedoms that the
-software does.  But this License is not limited to software manuals;
-it can be used for any textual work, regardless of subject matter or
-whether it is published as a printed book.  We recommend this License
-principally for works whose purpose is instruction or reference.
-
-@item
-APPLICABILITY AND DEFINITIONS
-
-This License applies to any manual or other work, in any medium, that
-contains a notice placed by the copyright holder saying it can be
-distributed under the terms of this License.  Such a notice grants a
-world-wide, royalty-free license, unlimited in duration, to use that
-work under the conditions stated herein.  The ``Document'', below,
-refers to any such manual or work.  Any member of the public is a
-licensee, and is addressed as ``you''.  You accept the license if you
-copy, modify or distribute the work in a way requiring permission
-under copyright law.
-
-A ``Modified Version'' of the Document means any work containing the
-Document or a portion of it, either copied verbatim, or with
-modifications and/or translated into another language.
-
-A ``Secondary Section'' is a named appendix or a front-matter section
-of the Document that deals exclusively with the relationship of the
-publishers or authors of the Document to the Document's overall
-subject (or to related matters) and contains nothing that could fall
-directly within that overall subject.  (Thus, if the Document is in
-part a textbook of mathematics, a Secondary Section may not explain
-any mathematics.)  The relationship could be a matter of historical
-connection with the subject or with related matters, or of legal,
-commercial, philosophical, ethical or political position regarding
-them.
-
-The ``Invariant Sections'' are certain Secondary Sections whose titles
-are designated, as being those of Invariant Sections, in the notice
-that says that the Document is released under this License.  If a
-section does not fit the above definition of Secondary then it is not
-allowed to be designated as Invariant.  The Document may contain zero
-Invariant Sections.  If the Document does not identify any Invariant
-Sections then there are none.
-
-The ``Cover Texts'' are certain short passages of text that are listed,
-as Front-Cover Texts or Back-Cover Texts, in the notice that says that
-the Document is released under this License.  A Front-Cover Text may
-be at most 5 words, and a Back-Cover Text may be at most 25 words.
-
-A ``Transparent'' copy of the Document means a machine-readable copy,
-represented in a format whose specification is available to the
-general public, that is suitable for revising the document
-straightforwardly with generic text editors or (for images composed of
-pixels) generic paint programs or (for drawings) some widely available
-drawing editor, and that is suitable for input to text formatters or
-for automatic translation to a variety of formats suitable for input
-to text formatters.  A copy made in an otherwise Transparent file
-format whose markup, or absence of markup, has been arranged to thwart
-or discourage subsequent modification by readers is not Transparent.
-An image format is not Transparent if used for any substantial amount
-of text.  A copy that is not ``Transparent'' is called ``Opaque''.
-
-Examples of suitable formats for Transparent copies include plain
-@sc{ascii} without markup, Texinfo input format, La@TeX{} input
-format, @acronym{SGML} or @acronym{XML} using a publicly available
-@acronym{DTD}, and standard-conforming simple @acronym{HTML},
-PostScript or @acronym{PDF} designed for human modification.  Examples
-of transparent image formats include @acronym{PNG}, @acronym{XCF} and
-@acronym{JPG}.  Opaque formats include proprietary formats that can be
-read and edited only by proprietary word processors, @acronym{SGML} or
-@acronym{XML} for which the @acronym{DTD} and/or processing tools are
-not generally available, and the machine-generated @acronym{HTML},
-PostScript or @acronym{PDF} produced by some word processors for
-output purposes only.
-
-The ``Title Page'' means, for a printed book, the title page itself,
-plus such following pages as are needed to hold, legibly, the material
-this License requires to appear in the title page.  For works in
-formats which do not have any title page as such, ``Title Page'' means
-the text near the most prominent appearance of the work's title,
-preceding the beginning of the body of the text.
-
-A section ``Entitled XYZ'' means a named subunit of the Document whose
-title either is precisely XYZ or contains XYZ in parentheses following
-text that translates XYZ in another language.  (Here XYZ stands for a
-specific section name mentioned below, such as ``Acknowledgements'',
-``Dedications'', ``Endorsements'', or ``History''.)  To ``Preserve the Title''
-of such a section when you modify the Document means that it remains a
-section ``Entitled XYZ'' according to this definition.
-
-The Document may include Warranty Disclaimers next to the notice which
-states that this License applies to the Document.  These Warranty
-Disclaimers are considered to be included by reference in this
-License, but only as regards disclaiming warranties: any other
-implication that these Warranty Disclaimers may have is void and has
-no effect on the meaning of this License.
-
-@item
-VERBATIM COPYING
-
-You may copy and distribute the Document in any medium, either
-commercially or noncommercially, provided that this License, the
-copyright notices, and the license notice saying this License applies
-to the Document are reproduced in all copies, and that you add no other
-conditions whatsoever to those of this License.  You may not use
-technical measures to obstruct or control the reading or further
-copying of the copies you make or distribute.  However, you may accept
-compensation in exchange for copies.  If you distribute a large enough
-number of copies you must also follow the conditions in section 3.
-
-You may also lend copies, under the same conditions stated above, and
-you may publicly display copies.
-
-@item
-COPYING IN QUANTITY
-
-If you publish printed copies (or copies in media that commonly have
-printed covers) of the Document, numbering more than 100, and the
-Document's license notice requires Cover Texts, you must enclose the
-copies in covers that carry, clearly and legibly, all these Cover
-Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
-the back cover.  Both covers must also clearly and legibly identify
-you as the publisher of these copies.  The front cover must present
-the full title with all words of the title equally prominent and
-visible.  You may add other material on the covers in addition.
-Copying with changes limited to the covers, as long as they preserve
-the title of the Document and satisfy these conditions, can be treated
-as verbatim copying in other respects.
-
-If the required texts for either cover are too voluminous to fit
-legibly, you should put the first ones listed (as many as fit
-reasonably) on the actual cover, and continue the rest onto adjacent
-pages.
-
-If you publish or distribute Opaque copies of the Document numbering
-more than 100, you must either include a machine-readable Transparent
-copy along with each Opaque copy, or state in or with each Opaque copy
-a computer-network location from which the general network-using
-public has access to download using public-standard network protocols
-a complete Transparent copy of the Document, free of added material.
-If you use the latter option, you must take reasonably prudent steps,
-when you begin distribution of Opaque copies in quantity, to ensure
-that this Transparent copy will remain thus accessible at the stated
-location until at least one year after the last time you distribute an
-Opaque copy (directly or through your agents or retailers) of that
-edition to the public.
-
-It is requested, but not required, that you contact the authors of the
-Document well before redistributing any large number of copies, to give
-them a chance to provide you with an updated version of the Document.
-
-@item
-MODIFICATIONS
-
-You may copy and distribute a Modified Version of the Document under
-the conditions of sections 2 and 3 above, provided that you release
-the Modified Version under precisely this License, with the Modified
-Version filling the role of the Document, thus licensing distribution
-and modification of the Modified Version to whoever possesses a copy
-of it.  In addition, you must do these things in the Modified Version:
-
-@enumerate A
-@item
-Use in the Title Page (and on the covers, if any) a title distinct
-from that of the Document, and from those of previous versions
-(which should, if there were any, be listed in the History section
-of the Document).  You may use the same title as a previous version
-if the original publisher of that version gives permission.
-
-@item
-List on the Title Page, as authors, one or more persons or entities
-responsible for authorship of the modifications in the Modified
-Version, together with at least five of the principal authors of the
-Document (all of its principal authors, if it has fewer than five),
-unless they release you from this requirement.
-
-@item
-State on the Title page the name of the publisher of the
-Modified Version, as the publisher.
-
-@item
-Preserve all the copyright notices of the Document.
-
-@item
-Add an appropriate copyright notice for your modifications
-adjacent to the other copyright notices.
-
-@item
-Include, immediately after the copyright notices, a license notice
-giving the public permission to use the Modified Version under the
-terms of this License, in the form shown in the Addendum below.
-
-@item
-Preserve in that license notice the full lists of Invariant Sections
-and required Cover Texts given in the Document's license notice.
-
-@item
-Include an unaltered copy of this License.
-
-@item
-Preserve the section Entitled ``History'', Preserve its Title, and add
-to it an item stating at least the title, year, new authors, and
-publisher of the Modified Version as given on the Title Page.  If
-there is no section Entitled ``History'' in the Document, create one
-stating the title, year, authors, and publisher of the Document as
-given on its Title Page, then add an item describing the Modified
-Version as stated in the previous sentence.
-
-@item
-Preserve the network location, if any, given in the Document for
-public access to a Transparent copy of the Document, and likewise
-the network locations given in the Document for previous versions
-it was based on.  These may be placed in the ``History'' section.
-You may omit a network location for a work that was published at
-least four years before the Document itself, or if the original
-publisher of the version it refers to gives permission.
-
-@item
-For any section Entitled ``Acknowledgements'' or ``Dedications'', Preserve
-the Title of the section, and preserve in the section all the
-substance and tone of each of the contributor acknowledgements and/or
-dedications given therein.
-
-@item
-Preserve all the Invariant Sections of the Document,
-unaltered in their text and in their titles.  Section numbers
-or the equivalent are not considered part of the section titles.
-
-@item
-Delete any section Entitled ``Endorsements''.  Such a section
-may not be included in the Modified Version.
-
-@item
-Do not retitle any existing section to be Entitled ``Endorsements'' or
-to conflict in title with any Invariant Section.
-
-@item
-Preserve any Warranty Disclaimers.
-@end enumerate
-
-If the Modified Version includes new front-matter sections or
-appendices that qualify as Secondary Sections and contain no material
-copied from the Document, you may at your option designate some or all
-of these sections as invariant.  To do this, add their titles to the
-list of Invariant Sections in the Modified Version's license notice.
-These titles must be distinct from any other section titles.
-
-You may add a section Entitled ``Endorsements'', provided it contains
-nothing but endorsements of your Modified Version by various
-parties---for example, statements of peer review or that the text has
-been approved by an organization as the authoritative definition of a
-standard.
-
-You may add a passage of up to five words as a Front-Cover Text, and a
-passage of up to 25 words as a Back-Cover Text, to the end of the list
-of Cover Texts in the Modified Version.  Only one passage of
-Front-Cover Text and one of Back-Cover Text may be added by (or
-through arrangements made by) any one entity.  If the Document already
-includes a cover text for the same cover, previously added by you or
-by arrangement made by the same entity you are acting on behalf of,
-you may not add another; but you may replace the old one, on explicit
-permission from the previous publisher that added the old one.
-
-The author(s) and publisher(s) of the Document do not by this License
-give permission to use their names for publicity for or to assert or
-imply endorsement of any Modified Version.
-
-@item
-COMBINING DOCUMENTS
-
-You may combine the Document with other documents released under this
-License, under the terms defined in section 4 above for modified
-versions, provided that you include in the combination all of the
-Invariant Sections of all of the original documents, unmodified, and
-list them all as Invariant Sections of your combined work in its
-license notice, and that you preserve all their Warranty Disclaimers.
-
-The combined work need only contain one copy of this License, and
-multiple identical Invariant Sections may be replaced with a single
-copy.  If there are multiple Invariant Sections with the same name but
-different contents, make the title of each such section unique by
-adding at the end of it, in parentheses, the name of the original
-author or publisher of that section if known, or else a unique number.
-Make the same adjustment to the section titles in the list of
-Invariant Sections in the license notice of the combined work.
-
-In the combination, you must combine any sections Entitled ``History''
-in the various original documents, forming one section Entitled
-``History''; likewise combine any sections Entitled ``Acknowledgements'',
-and any sections Entitled ``Dedications''.  You must delete all
-sections Entitled ``Endorsements.''
-
-@item
-COLLECTIONS OF DOCUMENTS
-
-You may make a collection consisting of the Document and other documents
-released under this License, and replace the individual copies of this
-License in the various documents with a single copy that is included in
-the collection, provided that you follow the rules of this License for
-verbatim copying of each of the documents in all other respects.
-
-You may extract a single document from such a collection, and distribute
-it individually under this License, provided you insert a copy of this
-License into the extracted document, and follow this License in all
-other respects regarding verbatim copying of that document.
-
-@item
-AGGREGATION WITH INDEPENDENT WORKS
-
-A compilation of the Document or its derivatives with other separate
-and independent documents or works, in or on a volume of a storage or
-distribution medium, is called an ``aggregate'' if the copyright
-resulting from the compilation is not used to limit the legal rights
-of the compilation's users beyond what the individual works permit.
-When the Document is included in an aggregate, this License does not
-apply to the other works in the aggregate which are not themselves
-derivative works of the Document.
-
-If the Cover Text requirement of section 3 is applicable to these
-copies of the Document, then if the Document is less than one half of
-the entire aggregate, the Document's Cover Texts may be placed on
-covers that bracket the Document within the aggregate, or the
-electronic equivalent of covers if the Document is in electronic form.
-Otherwise they must appear on printed covers that bracket the whole
-aggregate.
-
-@item
-TRANSLATION
-
-Translation is considered a kind of modification, so you may
-distribute translations of the Document under the terms of section 4.
-Replacing Invariant Sections with translations requires special
-permission from their copyright holders, but you may include
-translations of some or all Invariant Sections in addition to the
-original versions of these Invariant Sections.  You may include a
-translation of this License, and all the license notices in the
-Document, and any Warranty Disclaimers, provided that you also include
-the original English version of this License and the original versions
-of those notices and disclaimers.  In case of a disagreement between
-the translation and the original version of this License or a notice
-or disclaimer, the original version will prevail.
-
-If a section in the Document is Entitled ``Acknowledgements'',
-``Dedications'', or ``History'', the requirement (section 4) to Preserve
-its Title (section 1) will typically require changing the actual
-title.
-
-@item
-TERMINATION
-
-You may not copy, modify, sublicense, or distribute the Document except
-as expressly provided for under this License.  Any other attempt to
-copy, modify, sublicense or distribute the Document is void, and will
-automatically terminate your rights under this License.  However,
-parties who have received copies, or rights, from you under this
-License will not have their licenses terminated so long as such
-parties remain in full compliance.
-
-@item
-FUTURE REVISIONS OF THIS LICENSE
-
-The Free Software Foundation may publish new, revised versions
-of the GNU Free Documentation License from time to time.  Such new
-versions will be similar in spirit to the present version, but may
-differ in detail to address new problems or concerns.  See
-@uref{http://www.gnu.org/copyleft/}.
-
-Each version of the License is given a distinguishing version number.
-If the Document specifies that a particular numbered version of this
-License ``or any later version'' applies to it, you have the option of
-following the terms and conditions either of that specified version or
-of any later version that has been published (not as a draft) by the
-Free Software Foundation.  If the Document does not specify a version
-number of this License, you may choose any version ever published (not
-as a draft) by the Free Software Foundation.
-@end enumerate
-
-@page
-@c  GMP tweak: changed sectioning to @appendix/@appendixsec rather than
-@c  @appendix/@appendixsec
-@c  @appendixsubsec ADDENDUM: How to use this License for your documents
-@appendixsec ADDENDUM: How to use this License for your documents
-
-To use this License in a document you have written, include a copy of
-the License in the document and put the following copyright and
-license notices just after the title page:
-
-@smallexample
-@group
-  Copyright (C)  @var{year}  @var{your name}.
-  Permission is granted to copy, distribute and/or modify this document
-  under the terms of the GNU Free Documentation License, Version 1.2
-  or any later version published by the Free Software Foundation;
-  with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
-  Texts.  A copy of the license is included in the section entitled ``GNU
-  Free Documentation License''.
-@end group
-@end smallexample
-
-If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
-replace the ``with@dots{}Texts.'' line with this:
-
-@smallexample
-@group
-    with the Invariant Sections being @var{list their titles}, with
-    the Front-Cover Texts being @var{list}, and with the Back-Cover Texts
-    being @var{list}.
-@end group
-@end smallexample
-
-If you have Invariant Sections without Cover Texts, or some other
-combination of the three, merge those two alternatives to suit the
-situation.
-
-If your document contains nontrivial examples of program code, we
-recommend releasing these examples in parallel under your choice of
-free software license, such as the GNU General Public License,
-to permit their use in free software.
-
-@c Local Variables:
-@c ispell-local-pdict: "ispell-dict"
-@c End:
-
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1261059589 -3600
#      Thu Dec 17 15:19:49 2009 +0100
# Node ID 63d294749ec1350f7ecf67fcc918ece3f6bc2532
# Parent  6e0b9feebfb31a42be6b946cb7803aa7a9a1adbd
Cumulative changes from main repo.

diff -r 6e0b9feebfb3 -r 63d294749ec1 mpn/generic/mul_fft.c
--- a/mpn/generic/mul_fft.c	Thu Dec 17 15:18:49 2009 +0100
+++ b/mpn/generic/mul_fft.c	Thu Dec 17 15:19:49 2009 +0100
@@ -64,7 +64,7 @@
 #define HAVE_NATIVE_mpn_addsub_n 1
 #endif
 
-static void mpn_mul_fft_internal
+static mp_limb_t mpn_mul_fft_internal
 __GMP_PROTO ((mp_ptr, mp_srcptr, mp_srcptr, mp_size_t, int, int, mp_ptr *, mp_ptr *,
 	      mp_ptr, mp_ptr, mp_size_t, mp_size_t, mp_size_t, int **, mp_ptr,
 	      int));
@@ -75,7 +75,18 @@
    Don't declare it static since it is needed by tuneup.
 */
 #ifdef MUL_FFT_TABLE2
-#define MPN_FFT_TABLE2_SIZE 512
+
+#if defined (MUL_FFT_TABLE2_SIZE) && defined (SQR_FFT_TABLE2_SIZE)
+#if MUL_FFT_TABLE2_SIZE > SQR_FFT_TABLE2_SIZE
+#define FFT_TABLE2_SIZE MUL_FFT_TABLE2_SIZE
+#else
+#define FFT_TABLE2_SIZE SQR_FFT_TABLE2_SIZE
+#endif
+#endif
+
+#ifndef FFT_TABLE2_SIZE
+#define FFT_TABLE2_SIZE 200
+#endif
 
 /* FIXME: The format of this should change to need less space.
    Perhaps put n and k in the same 32-bit word, with n shifted-down
@@ -83,11 +94,11 @@
    n-1 is highly divisible.
    Alternatively, separate n and k out into separate arrays.  */
 struct nk {
-  mp_size_t n;
-  unsigned char k;
+  unsigned int n:27;
+  unsigned int k:5;
 };
 
-static struct nk mpn_fft_table2[2][MPN_FFT_TABLE2_SIZE] =
+static struct nk mpn_fft_table2[2][FFT_TABLE2_SIZE] =
 {
   MUL_FFT_TABLE2,
   SQR_FFT_TABLE2
@@ -728,7 +739,7 @@
    the out carry.
 */
 
-static void
+static mp_limb_t
 mpn_mul_fft_internal (mp_ptr op, mp_srcptr n, mp_srcptr m, mp_size_t pl,
 		      int k, int K,
 		      mp_ptr *Ap, mp_ptr *Bp,
@@ -827,6 +838,8 @@
   i = mpn_fft_norm_modF (op, pl, p, pla);
   if (rec) /* store the carry out */
     op[pl] = i;
+
+  return i;
 }
 
 /* return the lcm of a and 2^k */
@@ -843,7 +856,8 @@
   return a << l;
 }
 
-void
+
+mp_limb_t
 mpn_mul_fft (mp_ptr op, mp_size_t pl,
 	     mp_srcptr n, mp_size_t nl,
 	     mp_srcptr m, mp_size_t ml,
@@ -854,6 +868,7 @@
   mp_ptr *Ap, *Bp, A, T, B;
   int **_fft_l;
   int sqr = (n == m && nl == ml);
+  mp_limb_t h;
   TMP_DECL;
 
   TRACE (printf ("\nmpn_mul_fft pl=%ld nl=%ld ml=%ld k=%d\n", pl, nl, ml, k));
@@ -910,10 +925,12 @@
   if (n != m)
     mpn_mul_fft_decompose (B, Bp, K, nprime, m, ml, l, Mp, T);
 
-  mpn_mul_fft_internal (op, n, m, pl, k, K, Ap, Bp, A, B, nprime, l, Mp, _fft_l, T, 0);
+  h = mpn_mul_fft_internal (op, n, m, pl, k, K, Ap, Bp, A, B, nprime, l, Mp, _fft_l, T, 0);
 
   TMP_FREE;
   __GMP_FREE_FUNC_LIMBS (A, 2 * K * (nprime + 1));
+
+  return h;
 }
 
 /* multiply {n, nl} by {m, ml}, and put the result in {op, nl+ml} */
@@ -956,17 +973,20 @@
 		 nl, ml, pl2, pl3, k2));
 
   ASSERT_ALWAYS(pl3 <= pl);
-  mpn_mul_fft (op, pl3, n, nl, m, ml, k3);     /* mu */
+  cc = mpn_mul_fft (op, pl3, n, nl, m, ml, k3);     /* mu */
+  ASSERT_ALWAYS(cc == 0);
   pad_op = __GMP_ALLOCATE_FUNC_LIMBS (pl2);
-  mpn_mul_fft (pad_op, pl2, n, nl, m, ml, k2); /* lambda */
-  cc = mpn_sub_n (pad_op, pad_op, op, pl2);    /* lambda - low(mu) */
+  cc = mpn_mul_fft (pad_op, pl2, n, nl, m, ml, k2); /* lambda */
+  cc = -cc + mpn_sub_n (pad_op, pad_op, op, pl2);    /* lambda - low(mu) */
   /* 0 <= cc <= 1 */
+  ASSERT_ALWAYS(0 <= cc && cc <= 1);
   l = pl3 - pl2; /* l = pl2 / 2 since pl3 = 3/2 * pl2 */
   c2 = mpn_add_n (pad_op, pad_op, op + pl2, l);
-  cc = mpn_add_1 (pad_op + l, pad_op + l, l, (mp_limb_t) c2) - cc; /* -1 <= cc <= 1 */
+  cc = mpn_add_1 (pad_op + l, pad_op + l, l, (mp_limb_t) c2) - cc;
+  ASSERT_ALWAYS(-1 <= cc && cc <= 1);
   if (cc < 0)
     cc = mpn_add_1 (pad_op, pad_op, pl2, (mp_limb_t) -cc);
-  /* 0 <= cc <= 1 */
+  ASSERT_ALWAYS(0 <= cc && cc <= 1);
   /* now lambda-mu = {pad_op, pl2} - cc mod 2^(pl2*GMP_NUMB_BITS)+1 */
   oldcc = cc;
 #if HAVE_NATIVE_mpn_addsub_n
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1261352007 -3600
#      Mon Dec 21 00:33:27 2009 +0100
# Node ID 6a8a2a7469c1ed5dfc8f4a9bda45c6c03a683cc2
# Parent  63d294749ec1350f7ecf67fcc918ece3f6bc2532
Updates for new release.

diff -r 63d294749ec1 -r 6a8a2a7469c1 NEWS
--- a/NEWS	Thu Dec 17 15:19:49 2009 +0100
+++ b/NEWS	Mon Dec 21 00:33:27 2009 +0100
@@ -24,12 +24,15 @@
   * Fixed overflow issues in mpz_set_str, mpz_inp_str, mpf_set_str, and
     mpf_get_str.
   * Avoid unbounded stack allocation for unbalanced multiplication.
+  * Fixed bug in FFT multiplication.
 
   Speedups:
   * None, except that proper processor recognition helps affected processors.
 
   Features:
   * Recognise more "Core 2" processor variants.
+  * The cofactors of mpz_gcdext and mpn_gcdext are now more strictly
+    normalised, returning to how GMP 4.2 worked.
 
 
 Changes between GMP version 4.3.0 and 4.3.1
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1261352130 -3600
#      Mon Dec 21 00:35:30 2009 +0100
# Node ID ca2ef83787add7b4fbe2e63c19545bf1005fed13
# Parent  6a8a2a7469c1ed5dfc8f4a9bda45c6c03a683cc2
Bump version number for release.

diff -r 6a8a2a7469c1 -r ca2ef83787ad ChangeLog
--- a/ChangeLog	Mon Dec 21 00:33:27 2009 +0100
+++ b/ChangeLog	Mon Dec 21 00:35:30 2009 +0100
@@ -1,3 +1,9 @@
+2009-12-21  Torbjorn Granlund  <tege@gmplib.org>
+
+	* Version 4.3.2 released.
+
+	* gmp-h.in (__GNU_MP_VERSION_PATCHLEVEL): Bump.
+
 2009-12-17  Torbjorn Granlund  <tege@gmplib.org>
 
 	* doc/gmp.texi: Update References section.  Update Contributors
diff -r 6a8a2a7469c1 -r ca2ef83787ad gmp-h.in
--- a/gmp-h.in	Mon Dec 21 00:33:27 2009 +0100
+++ b/gmp-h.in	Mon Dec 21 00:35:30 2009 +0100
@@ -2221,7 +2221,7 @@
 /* Major version number is the value of __GNU_MP__ too, above and in mp.h. */
 #define __GNU_MP_VERSION 4
 #define __GNU_MP_VERSION_MINOR 3
-#define __GNU_MP_VERSION_PATCHLEVEL 1
+#define __GNU_MP_VERSION_PATCHLEVEL 2
 
 #define __GMP_H__
 #endif /* __GMP_H__ */
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1261878623 -3600
#      Sun Dec 27 02:50:23 2009 +0100
# Node ID 0eaf0c1e49c708a3565597c57a751cc835d43bdc
# Parent  ca2ef83787add7b4fbe2e63c19545bf1005fed13
(gmp_TEXINFOS): Refer to right fdl file.

diff -r ca2ef83787ad -r 0eaf0c1e49c7 doc/Makefile.am
--- a/doc/Makefile.am	Mon Dec 21 00:35:30 2009 +0100
+++ b/doc/Makefile.am	Sun Dec 27 02:50:23 2009 +0100
@@ -22,4 +22,4 @@
 EXTRA_DIST = configuration isa_abi_headache projects.html tasks.html
 
 info_TEXINFOS = gmp.texi
-gmp_TEXINFOS = fdl.texi
+gmp_TEXINFOS = fdl-1.3.texi
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1261878719 -3600
#      Sun Dec 27 02:51:59 2009 +0100
# Node ID 83874bdae55e9e196e82888d73d278c9a9895baf
# Parent  0eaf0c1e49c708a3565597c57a751cc835d43bdc
Update mpn_mul_fft declaration.

diff -r 0eaf0c1e49c7 -r 83874bdae55e ChangeLog
--- a/ChangeLog	Sun Dec 27 02:50:23 2009 +0100
+++ b/ChangeLog	Sun Dec 27 02:51:59 2009 +0100
@@ -1,7 +1,11 @@
-2009-12-21  Torbjorn Granlund  <tege@gmplib.org>
+2009-12-27  Torbjorn Granlund  <tege@gmplib.org>
 
 	* Version 4.3.2 released.
 
+	* gmp-impl.h: Update mpn_mul_fft declaration.
+
+2009-12-21  Torbjorn Granlund  <tege@gmplib.org>
+
 	* gmp-h.in (__GNU_MP_VERSION_PATCHLEVEL): Bump.
 
 2009-12-17  Torbjorn Granlund  <tege@gmplib.org>
diff -r 0eaf0c1e49c7 -r 83874bdae55e gmp-impl.h
--- a/gmp-impl.h	Sun Dec 27 02:50:23 2009 +0100
+++ b/gmp-impl.h	Sun Dec 27 02:51:59 2009 +0100
@@ -1142,7 +1142,7 @@
 int       mpn_fft_best_k __GMP_PROTO ((mp_size_t, int)) ATTRIBUTE_CONST;
 
 #define   mpn_mul_fft __MPN(mul_fft)
-void      mpn_mul_fft __GMP_PROTO ((mp_ptr, mp_size_t, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t, int));
+mp_limb_t mpn_mul_fft __GMP_PROTO ((mp_ptr, mp_size_t, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t, int));
 
 #define   mpn_mul_fft_full __MPN(mul_fft_full)
 void      mpn_mul_fft_full __GMP_PROTO ((mp_ptr, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t));
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1261942641 -3600
#      Sun Dec 27 20:37:21 2009 +0100
# Node ID 0f129e8b4643bd3ab5997a43cefb8a12a9f0db10
# Parent  83874bdae55e9e196e82888d73d278c9a9895baf
(mpn_sqr): New name for mpn_sqr_n.

diff -r 83874bdae55e -r 0f129e8b4643 ChangeLog
--- a/ChangeLog	Sun Dec 27 02:51:59 2009 +0100
+++ b/ChangeLog	Sun Dec 27 20:37:21 2009 +0100
@@ -2,6 +2,9 @@
 
 	* Version 4.3.2 released.
 
+	* (mpn_sqr): New name for mpn_sqr_n.  Make minimal changes,
+	leaving internal references still to old name.
+
 	* gmp-impl.h: Update mpn_mul_fft declaration.
 
 2009-12-21  Torbjorn Granlund  <tege@gmplib.org>
diff -r 83874bdae55e -r 0f129e8b4643 gmp-h.in
--- a/gmp-h.in	Sun Dec 27 02:51:59 2009 +0100
+++ b/gmp-h.in	Sun Dec 27 20:37:21 2009 +0100
@@ -1550,6 +1550,9 @@
 #define mpn_mul_n __MPN(mul_n)
 __GMP_DECLSPEC void mpn_mul_n __GMP_PROTO ((mp_ptr, mp_srcptr, mp_srcptr, mp_size_t));
 
+#define mpn_sqr __MPN(sqr)
+__GMP_DECLSPEC void mpn_sqr __GMP_PROTO ((mp_ptr, mp_srcptr, mp_size_t));
+
 #define mpn_neg_n __MPN(neg_n)
 #if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpn_neg_n)
 __GMP_DECLSPEC mp_limb_t mpn_neg_n __GMP_PROTO ((mp_ptr, mp_srcptr, mp_size_t));
diff -r 83874bdae55e -r 0f129e8b4643 gmp-impl.h
--- a/gmp-impl.h	Sun Dec 27 02:51:59 2009 +0100
+++ b/gmp-impl.h	Sun Dec 27 20:37:21 2009 +0100
@@ -864,8 +864,7 @@
 #define mpn_mullow_basecase __MPN(mullow_basecase)
 __GMP_DECLSPEC void mpn_mullow_basecase __GMP_PROTO ((mp_ptr, mp_srcptr, mp_srcptr, mp_size_t));
 
-#define mpn_sqr_n __MPN(sqr_n)
-__GMP_DECLSPEC void mpn_sqr_n __GMP_PROTO ((mp_ptr, mp_srcptr, mp_size_t));
+#define mpn_sqr_n __MPN(sqr)	/* compatibility */
 
 #ifndef mpn_sqr_basecase  /* if not done with cpuvec in a fat binary */
 #define mpn_sqr_basecase __MPN(sqr_basecase)
diff -r 83874bdae55e -r 0f129e8b4643 mpn/generic/mul_n.c
--- a/mpn/generic/mul_n.c	Sun Dec 27 02:51:59 2009 +0100
+++ b/mpn/generic/mul_n.c	Sun Dec 27 20:37:21 2009 +0100
@@ -751,7 +751,7 @@
 }
 
 void
-mpn_sqr_n (mp_ptr p, mp_srcptr a, mp_size_t n)
+mpn_sqr (mp_ptr p, mp_srcptr a, mp_size_t n)
 {
   ASSERT (n >= 1);
   ASSERT (! MPN_OVERLAP_P (p, 2 * n, a, n));
diff -r 83874bdae55e -r 0f129e8b4643 tune/speed.c
--- a/tune/speed.c	Sun Dec 27 02:51:59 2009 +0100
+++ b/tune/speed.c	Sun Dec 27 20:37:21 2009 +0100
@@ -293,7 +293,7 @@
 #endif
 
   { "mpn_mul_n",         speed_mpn_mul_n            },
-  { "mpn_sqr_n",         speed_mpn_sqr_n            },
+  { "mpn_sqr",           speed_mpn_sqr_n            },
 
   { "mpn_kara_mul_n",    speed_mpn_kara_mul_n       },
   { "mpn_kara_sqr_n",    speed_mpn_kara_sqr_n       },
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1262030389 -3600
#      Mon Dec 28 20:59:49 2009 +0100
# Node ID abad168041f7e2bcabfb3fa4da182a2cd6e3d3b6
# Parent  0f129e8b4643bd3ab5997a43cefb8a12a9f0db10
Remove emacs variable settings code.

diff -r 0f129e8b4643 -r abad168041f7 NEWS
--- a/NEWS	Sun Dec 27 20:37:21 2009 +0100
+++ b/NEWS	Mon Dec 28 20:59:49 2009 +0100
@@ -451,11 +451,3 @@
 * mpz division functions round differently.
 * mpz mod functions now really compute mod.
 * mpz_powm and mpz_powm_ui now really use mod for reduction.
-
-
-
-----------------
-Local variables:
-mode: text
-fill-column: 76
-End:
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1262565066 -3600
#      Mon Jan 04 01:31:06 2010 +0100
# Node ID 97480a13dee539b0b8e02120d4f20b64b09cd548
# Parent  abad168041f7e2bcabfb3fa4da182a2cd6e3d3b6
Change license.

diff -r abad168041f7 -r 97480a13dee5 NEWS
--- a/NEWS	Mon Dec 28 20:59:49 2009 +0100
+++ b/NEWS	Mon Jan 04 01:31:06 2010 +0100
@@ -1,20 +1,8 @@
 Copyright 1996, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
-2009 Free Software Foundation, Inc.
-
-This file is part of the GNU MP Library.
+2009, 2010 Free Software Foundation, Inc.
 
-The GNU MP Library is free software; you can redistribute it and/or modify
-it under the terms of the GNU Lesser General Public License as published by
-the Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-The GNU MP Library is distributed in the hope that it will be useful, but
-WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
-or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
-License for more details.
-
-You should have received a copy of the GNU Lesser General Public License
-along with the GNU MP Library.  If not, see http://www.gnu.org/licenses/.
+Verbatim copying and distribution of this entire article is permitted
+in any medium, provided this notice is preserved.
 
 
 Changes between GMP version 4.3.1 and 4.3.2
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1262565104 -3600
#      Mon Jan 04 01:31:44 2010 +0100
# Node ID 456550117e63f7b8cbe648a9cd43f1463cabfc71
# Parent  97480a13dee539b0b8e02120d4f20b64b09cd548
*** empty log message ***

diff -r 97480a13dee5 -r 456550117e63 ChangeLog
--- a/ChangeLog	Mon Jan 04 01:31:06 2010 +0100
+++ b/ChangeLog	Mon Jan 04 01:31:44 2010 +0100
@@ -1,7 +1,9 @@
-2009-12-27  Torbjorn Granlund  <tege@gmplib.org>
+2010-01-04  Torbjorn Granlund  <tege@gmplib.org>
 
 	* Version 4.3.2 released.
 
+2009-12-27  Torbjorn Granlund  <tege@gmplib.org>
+
 	* (mpn_sqr): New name for mpn_sqr_n.  Make minimal changes,
 	leaving internal references still to old name.
 
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1262869871 -3600
#      Thu Jan 07 14:11:11 2010 +0100
# Node ID de30972da69d100d523582ba50267646c296433c
# Parent  456550117e63f7b8cbe648a9cd43f1463cabfc71
Update mpn_gcd, mpn_gcd_1, mpn_gcdext documentation.

diff -r 456550117e63 -r de30972da69d doc/gmp.texi
--- a/doc/gmp.texi	Mon Jan 04 01:31:44 2010 +0100
+++ b/doc/gmp.texi	Thu Jan 07 14:11:11 2010 +0100
@@ -5334,40 +5334,47 @@
 negative value if @math{@var{s1} < @var{s2}}.
 @end deftypefun
 
-@deftypefun mp_size_t mpn_gcd (mp_limb_t *@var{rp}, mp_limb_t *@var{s1p}, mp_size_t @var{s1n}, mp_limb_t *@var{s2p}, mp_size_t @var{s2n})
-Set @{@var{rp}, @var{retval}@} to the greatest common divisor of @{@var{s1p},
-@var{s1n}@} and @{@var{s2p}, @var{s2n}@}.  The result can be up to @var{s2n}
-limbs, the return value is the actual number produced.  Both source operands
-are destroyed.
-
-@{@var{s1p}, @var{s1n}@} must have at least as many bits as @{@var{s2p},
-@var{s2n}@}.  @{@var{s2p}, @var{s2n}@} must be odd.  Both operands must have
-non-zero most significant limbs.  No overlap is permitted between @{@var{s1p},
-@var{s1n}@} and @{@var{s2p}, @var{s2n}@}.
-@end deftypefun
-
-@deftypefun mp_limb_t mpn_gcd_1 (const mp_limb_t *@var{s1p}, mp_size_t @var{s1n}, mp_limb_t @var{s2limb})
-Return the greatest common divisor of @{@var{s1p}, @var{s1n}@} and
-@var{s2limb}.  Both operands must be non-zero.
-@end deftypefun
-
-@deftypefun mp_size_t mpn_gcdext (mp_limb_t *@var{r1p}, mp_limb_t *@var{r2p}, mp_size_t *@var{r2n}, mp_limb_t *@var{s1p}, mp_size_t @var{s1n}, mp_limb_t *@var{s2p}, mp_size_t @var{s2n})
-Calculate the greatest common divisor of @{@var{s1p}, @var{s1n}@} and
-@{@var{s2p}, @var{s2n}@}.  Store the gcd at @{@var{r1p}, @var{retval}@} and
-the first cofactor at @{@var{r2p}, *@var{r2n}@}, with *@var{r2n} negative if
-the cofactor is negative.  @var{r1p} and @var{r2p} should each have room for
-@math{@var{s1n}+1} limbs, but the return value and value stored through
-@var{r2n} indicate the actual number produced.
-
-@math{@{@var{s1p}, @var{s1n}@} @ge{} @{@var{s2p}, @var{s2n}@}} is required,
-and both must be non-zero.  The regions @{@var{s1p}, @math{@var{s1n}+1}@} and
-@{@var{s2p}, @math{@var{s2n}+1}@} are destroyed (i.e.@: the operands plus an
-extra limb past the end of each).
-
-The cofactor @var{r2} will satisfy @m{r_2 s_1 + k s_2 = r_1, @var{r2}*@var{s1}
-+ @var{k}*@var{s2} = @var{r1}}.  The second cofactor @var{k} is not calculated
-but can easily be obtained from @m{(r_1 - r_2 s_1) / s_2, (@var{r1} -
-@var{r2}*@var{s1}) / @var{s2}} (this division will be exact).
+@deftypefun mp_size_t mpn_gcd (mp_limb_t *@var{rp}, mp_limb_t *@var{xp}, mp_size_t @var{xn}, mp_limb_t *@var{yp}, mp_size_t @var{yn})
+Set @{@var{rp}, @var{retval}@} to the greatest common divisor of @{@var{xp},
+@var{xn}@} and @{@var{yp}, @var{yn}@}.  The result can be up to @var{yn} limbs,
+the return value is the actual number produced.  Both source operands are
+destroyed.
+
+@{@var{xp}, @var{xn}@} must have at least as many bits as @{@var{yp},
+@var{yn}@}.  @{@var{yp}, @var{yn}@} must be odd.  Both operands must have
+non-zero most significant limbs.  No overlap is permitted between @{@var{xp},
+@var{xn}@} and @{@var{yp}, @var{yn}@}.
+@end deftypefun
+
+@deftypefun mp_limb_t mpn_gcd_1 (const mp_limb_t *@var{xp}, mp_size_t @var{xn}, mp_limb_t @var{ylimb})
+Return the greatest common divisor of @{@var{xp}, @var{xn}@} and @var{ylimb}.
+Both operands must be non-zero.
+@end deftypefun
+
+@deftypefun mp_size_t mpn_gcdext (mp_limb_t *@var{gp}, mp_limb_t *@var{sp}, mp_size_t *@var{sn}, mp_limb_t *@var{xp}, mp_size_t @var{xn}, mp_limb_t *@var{yp}, mp_size_t @var{yn})
+Let @m{U,@var{U}} be defined by @{@var{xp}, @var{xn}@} and let @m{V,@var{V}} be
+defined by @{@var{yp}, @var{yn}@}.
+
+Compute the greatest common divisor @math{G} of @math{U} and @math{V}.  Compute
+a cofactor @math{S} such that @math{G = US + VT}.  The second cofactor @var{T}
+is not computed but can easily be obtained from @m{(G - US) / V, (@var{G} -
+@var{U}*@var{S}) / @var{V}} (the division will be exact).  It is required that
+@math{U @ge V > 0}.
+
+@math{S} satisfies @math{S = 1} or @math{@GMPabs{S} < V / (2 G)}. @math{S =
+0} if and only if @math{V} divides @math{U} (i.e., @math{G = V}).
+
+Store @math{G} at @var{gp} and let the return value define its limb count.
+Store @math{S} at @var{sp} and let |*@var{sn}| define its limb count.  @math{S}
+can be negative; when this happens *@var{sn} will be negative.  The areas at
+@var{gp} and @var{sp} should each have room for @math{@var{xn}+1} limbs.
+
+The areas @{@var{xp}, @math{@var{xn}+1}@} and @{@var{yp}, @math{@var{yn}+1}@}
+are destroyed (i.e.@: the input operands plus an extra limb past the end of
+each).
+
+Compatibility note: GMP 4.3.0 and 4.3.1 defined @math{S} less strictly.
+Earlier as well as later GMP releases define @math{S} as described here.
 @end deftypefun
 
 @deftypefun mp_size_t mpn_sqrtrem (mp_limb_t *@var{r1p}, mp_limb_t *@var{r2p}, const mp_limb_t *@var{sp}, mp_size_t @var{n})
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1262877403 -3600
#      Thu Jan 07 16:16:43 2010 +0100
# Node ID 9d3415ef9dbbc8d04a5163e753a9ad1ab71fdae7
# Parent  de30972da69d100d523582ba50267646c296433c
*** empty log message ***

diff -r de30972da69d -r 9d3415ef9dbb ChangeLog
--- a/ChangeLog	Thu Jan 07 14:11:11 2010 +0100
+++ b/ChangeLog	Thu Jan 07 16:16:43 2010 +0100
@@ -1,4 +1,4 @@
-2010-01-04  Torbjorn Granlund  <tege@gmplib.org>
+2010-01-07  Torbjorn Granlund  <tege@gmplib.org>
 
 	* Version 4.3.2 released.
 
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1265533219 -3600
#      Sun Feb 07 10:00:19 2010 +0100
# Node ID a7de6127e187a29a36b579c6f760a42bba6b1be4
# Parent  9d3415ef9dbbc8d04a5163e753a9ad1ab71fdae7
Fix a typo.

diff -r 9d3415ef9dbb -r a7de6127e187 ChangeLog
--- a/ChangeLog	Thu Jan 07 16:16:43 2010 +0100
+++ b/ChangeLog	Sun Feb 07 10:00:19 2010 +0100
@@ -1,3 +1,8 @@
+2010-02-07  Torbjorn Granlund  <tege@gmplib.org>
+
+	* mpn/x86_64/aorrlsh_n.asm (cnt): Fix a typo.
+	* mpn/x86_64/lshsub_n.asm: Likewise.
+
 2010-01-07  Torbjorn Granlund  <tege@gmplib.org>
 
 	* Version 4.3.2 released.
diff -r 9d3415ef9dbb -r a7de6127e187 mpn/x86_64/aorrlsh_n.asm
--- a/mpn/x86_64/aorrlsh_n.asm	Thu Jan 07 16:16:43 2010 +0100
+++ b/mpn/x86_64/aorrlsh_n.asm	Sun Feb 07 10:00:19 2010 +0100
@@ -41,7 +41,7 @@
 define(`up',	`%rsi')
 define(`vp',	`%rdx')
 define(`n',	`%rcx')
-define(`cnt'	`%r8')
+define(`cnt',	`%r8')
 
 ifdef(`OPERATION_addlsh_n',`
   define(ADDSUBC,       `adc')
diff -r 9d3415ef9dbb -r a7de6127e187 mpn/x86_64/lshsub_n.asm
--- a/mpn/x86_64/lshsub_n.asm	Thu Jan 07 16:16:43 2010 +0100
+++ b/mpn/x86_64/lshsub_n.asm	Sun Feb 07 10:00:19 2010 +0100
@@ -39,7 +39,7 @@
 define(`up',	`%rsi')
 define(`vp',	`%rdx')
 define(`n',	`%rcx')
-define(`cnt'	`%r8')
+define(`cnt',	`%r8')
 
 ASM_START()
 	TEXT
# HG changeset patch
# User Marco Bodrato <bodrato@mail.dm.unipi.it>
# Date 1265614308 -3600
#      Mon Feb 08 08:31:48 2010 +0100
# Node ID c44d519435fb4546c26752717ddc9857205f71eb
# Parent  a7de6127e187a29a36b579c6f760a42bba6b1be4
Backported Intel processors recognition from 5.0.1 .

diff -r a7de6127e187 -r c44d519435fb ChangeLog
--- a/ChangeLog	Sun Feb 07 10:00:19 2010 +0100
+++ b/ChangeLog	Mon Feb 08 08:31:48 2010 +0100
@@ -1,3 +1,7 @@
+2010-02-08  Marco Bodrato  <bodrato@mail.dm.unipi.it>
+
+	* config.guess: Recognise many more Intel processors.
+
 2010-02-07  Torbjorn Granlund  <tege@gmplib.org>
 
 	* mpn/x86_64/aorrlsh_n.asm (cnt): Fix a typo.
diff -r a7de6127e187 -r c44d519435fb config.guess
--- a/config.guess	Sun Feb 07 10:00:19 2010 +0100
+++ b/config.guess	Mon Feb 08 08:31:48 2010 +0100
@@ -736,8 +736,14 @@
 	  else if (model <= 14)	modelstr = "pentiumm";
 	  else if (model <= 25)	modelstr = "core2";
 	  else if (model <= 27)	modelstr = "core2"; /* core i5, i7 */
-	  else if (model == 28)	modelstr = "atom";
-	  else if (model == 29)	modelstr = "core2";
+	  else if (model == 28)	modelstr = "atom";  /* Silverthorne */
+	  else if (model == 29)	modelstr = "core2"; /* PNR Dunnington */
+	  else if (model == 0x1e)	modelstr = "core2"; /* NHM Lynnfield/Jasper */
+	  else if (model == 0x25)	modelstr = "core2"; /* WSM Clarkdale/Arrandale */
+	  else if (model == 0x26)	modelstr = "atom";  /* Lincroft */
+	  else if (model == 0x27)	modelstr = "atom";  /* Saltwell */
+	  else if (model == 0x2c)	modelstr = "core2"; /* WSM Gulftown */
+	  else if (model == 0x2e)	modelstr = "core2"; /* NHM Beckton */
 	  break;
 	case 15:
 	  modelstr = "pentium4";
# HG changeset patch
# User Marco Bodrato <bodrato@mail.dm.unipi.it>
# Date 1265618271 -3600
#      Mon Feb 08 09:37:51 2010 +0100
# Node ID 9400582f6b84a1224be68e90baf0c7898a945f41
# Parent  c44d519435fb4546c26752717ddc9857205f71eb
Fix typos.

diff -r c44d519435fb -r 9400582f6b84 configure.in
--- a/configure.in	Mon Feb 08 08:31:48 2010 +0100
+++ b/configure.in	Mon Feb 08 09:37:51 2010 +0100
@@ -967,7 +967,7 @@
             # longlong.h macros expect limb operands in a single 64-bit
             # register, not two 32-bit registers as would be given for a
             # long long without -mpowerpc64.  In theory we could detect and
-            # accomodate both styles, but the proper 64-bit registers will
+            # accommodate both styles, but the proper 64-bit registers will
             # be fastest and are what we really want to use.
             #
 	    # One would think -mpowerpc64 would set the assembler in the right
@@ -1692,10 +1692,10 @@
           cflags="$cflags_maybe $cflags"
         fi
 
-        # Any user CFLAGS, even an empty string, takes precendence
+        # Any user CFLAGS, even an empty string, takes precedence
         if test "$test_CFLAGS" = set; then cflags=$CFLAGS; fi
 
-        # Any user CPPFLAGS, even an empty string, takes precendence
+        # Any user CPPFLAGS, even an empty string, takes precedence
                                eval cppflags=\"\$${ccbase}${abi1}_cppflags\"
         test -n "$cppflags" || eval cppflags=\"\$${ccbase}${abi2}_cppflags\"
         if test "$test_CPPFLAGS" = set; then cppflags=$CPPFLAGS; fi
@@ -2514,7 +2514,7 @@
 # setup that structure, on a per-directory basis ready for
 # mpn/<cpu>/fat/fat.c.
 #
-# fat.h includes thesholds listed in $fat_thresholds, extracted from
+# fat.h includes thresholds listed in $fat_thresholds, extracted from
 # gmp-mparam.h in each directory.  An overall maximum for each threshold is
 # established, for use in making fixed size arrays of temporary space.
 # (Eg. MUL_TOOM3_THRESHOLD_LIMIT used by mpn/generic/mul.c.)
@@ -2565,7 +2565,7 @@
   echo "
 /* Copy all fields into __gmpn_cpuvec.
    memcpy is not used because it might operate byte-wise (depending on its
-   implemenation), and we need the function pointer writes to be atomic.
+   implementation), and we need the function pointer writes to be atomic.
    "volatile" discourages the compiler from trying to optimize this.  */
 #define CPUVEC_INSTALL(vec) \\
   do { \\
@@ -2627,7 +2627,7 @@
     esac
 
     # Extract desired thresholds from gmp-mparam.h file in this directory,
-    # if prsent.
+    # if present.
     tmp_mparam=$srcdir/mpn/$tmp_dir/gmp-mparam.h
     if test -f $tmp_mparam; then
       for tmp_tn in $fat_thresholds; do
@@ -3095,7 +3095,7 @@
 # Sizes of some types, needed at preprocessing time.
 #
 # FIXME: The assumption that BITS_PER_MP_LIMB is 8*sizeof(mp_limb_t) might
-# be slightly rash, but it's true everwhere we know of and ought to be true
+# be slightly rash, but it's true everywhere we know of and ought to be true
 # of any sensible system.  In a generic C build, grepping LONG_BIT out of
 # <limits.h> might be an alternative, for maximum portability.
 #
# HG changeset patch
# User Marco Bodrato <bodrato@mail.dm.unipi.it>
# Date 1265621031 -3600
#      Mon Feb 08 10:23:51 2010 +0100
# Node ID 0c87a74fd8af899547b8622bab7dfe0c3f9b9c6e
# Parent  9400582f6b84a1224be68e90baf0c7898a945f41
Backport atom-32 options.

diff -r 9400582f6b84 -r 0c87a74fd8af acinclude.m4
--- a/acinclude.m4	Mon Feb 08 09:37:51 2010 +0100
+++ b/acinclude.m4	Mon Feb 08 10:23:51 2010 +0100
@@ -1,8 +1,8 @@
 dnl  GMP specific autoconf macros
 
 
-dnl  Copyright 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009 Free Software
-dnl  Foundation, Inc.
+dnl  Copyright 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010 Free
+dnl  Software Foundation, Inc.
 dnl
 dnl  This file is part of the GNU MP Library.
 dnl
@@ -44,8 +44,10 @@
 [[powerpc64-*-* | powerpc64le-*-* | powerpc620-*-* | powerpc630-*-* | powerpc970-*-* | power[3-9]-*-*]])
 
 define(X86_PATTERN,
-[[i?86*-*-* | k[5-8]*-*-* | pentium*-*-* | athlon-*-* | viac3*-*-* | geode*-*-*]])
-
+[[i?86*-*-* | k[5-8]*-*-* | pentium*-*-* | athlon-*-* | viac3*-*-* | geode*-*-* | atom-*-*]])
+
+define(X86_64_PATTERN,
+[[athlon64-*-* | atom-*-* | core2-*-* | x86_64-*-* ]])
 
 dnl  GMP_FAT_SUFFIX(DSTVAR, DIRECTORY)
 dnl  ---------------------------------
diff -r 9400582f6b84 -r 0c87a74fd8af config.guess
--- a/config.guess	Mon Feb 08 09:37:51 2010 +0100
+++ b/config.guess	Mon Feb 08 10:23:51 2010 +0100
@@ -3,7 +3,7 @@
 # GMP config.guess wrapper.
 
 
-# Copyright 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008 Free Software
+# Copyright 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2010 Free Software
 # Foundation, Inc.
 #
 # This file is part of the GNU MP Library.
diff -r 9400582f6b84 -r 0c87a74fd8af configure.in
--- a/configure.in	Mon Feb 08 09:37:51 2010 +0100
+++ b/configure.in	Mon Feb 08 10:23:51 2010 +0100
@@ -4,7 +4,7 @@
 define(GMP_COPYRIGHT,[[
 
 Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
-2007 Free Software Foundation, Inc.
+2007, 2010 Free Software Foundation, Inc.
 
 This file is part of the GNU MP Library.
 
@@ -1281,7 +1281,7 @@
   # mode, in case -m32 has failed not because it's an old gcc, but because
   # it's a dual 32/64-bit gcc without a 32-bit libc, or whatever.
   #
-  X86_PATTERN | athlon64-*-* | atom-*-* | core2-*-* | x86_64-*-*)
+  X86_PATTERN | X86_64_PATTERN)
     abilist="32"
     cclist="gcc icc cc"
     gcc_cflags="$gcc_cflags $fomit_frame_pointer"
@@ -1409,6 +1409,10 @@
         gcc_cflags_cpu="-mtune=core2 -mtune=k8"
         gcc_cflags_arch="-march=core2 -march=core2~-mno-sse2 -march=k8 -march=k8~-mno-sse2"
         ;;
+      atom)
+        gcc_cflags_cpu="-mtune=atom -mtune=pentium3"
+        gcc_cflags_arch="-march=atom -march=pentium3"
+        ;;
       *)
         gcc_cflags_cpu="-mtune=i486 -mcpu=i486 -m486"
         gcc_cflags_arch="-march=i486"
@@ -1434,6 +1438,7 @@
       # VIA/Centaur processors, sold as CyrixIII and C3.
       viac32)               path="x86/p6/p3mmx x86/p6/mmx x86/p6 x86";;
       viac3*)               path="x86/pentium/mmx x86/pentium x86";;
+      atom)                 path="x86/atom x86" ;;
       *)                    path="x86" ;;
     esac
 
@@ -2037,7 +2042,7 @@
 # enough assembler.
 #
 case $host in
-  X86_PATTERN | athlon64-*-* | atom-*-* | core2-*-* | x86_64-*-*)
+  X86_PATTERN | X86_64_PATTERN)
     if test "$ABI" = 32; then
       case "$path $fat_path" in
         *mmx*)   GMP_ASM_X86_MMX( , [GMP_STRIP_PATH(*mmx*)]) ;;
@@ -3017,7 +3022,7 @@
           ;;
       esac
       ;;
-    X86_PATTERN | athlon64-*-* | atom-*-* | core2-*-* | x86_64-*-*)
+    X86_PATTERN | X86_64_PATTERN)
       GMP_ASM_ALIGN_FILL_0x90
       case $ABI in
         32)
# HG changeset patch
# User Marco Bodrato <bodrato@mail.dm.unipi.it>
# Date 1265626976 -3600
#      Mon Feb 08 12:02:56 2010 +0100
# Node ID 95d35d1a5b904732266a2918a08018262f8b5e13
# Parent  0c87a74fd8af899547b8622bab7dfe0c3f9b9c6e
Changelog.

diff -r 0c87a74fd8af -r 95d35d1a5b90 ChangeLog
--- a/ChangeLog	Mon Feb 08 10:23:51 2010 +0100
+++ b/ChangeLog	Mon Feb 08 12:02:56 2010 +0100
@@ -1,5 +1,8 @@
 2010-02-08  Marco Bodrato  <bodrato@mail.dm.unipi.it>
 
+	* acinclude.m4 (X86_64_PATTERN): New.
+	* configure.in: Compiler options for atom-32, and use
+	X86_64_PATTERN.
 	* config.guess: Recognise many more Intel processors.
 
 2010-02-07  Torbjorn Granlund  <tege@gmplib.org>
# HG changeset patch
# User Marco Bodrato <bodrato@mail.dm.unipi.it>
# Date 1265627207 -3600
#      Mon Feb 08 12:06:47 2010 +0100
# Node ID dde3c881e7ce52bc7a9cbd27bb36d0ef0e39322c
# Parent  95d35d1a5b904732266a2918a08018262f8b5e13
Tuned parameter for atom-32.

diff -r 95d35d1a5b90 -r dde3c881e7ce mpn/x86/atom/gmp-mparam.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mpn/x86/atom/gmp-mparam.h	Mon Feb 08 12:06:47 2010 +0100
@@ -0,0 +1,65 @@
+/* Intel Atom/32 gmp-mparam.h -- Compiler/machine parameter header file.
+
+Copyright 1991, 1993, 1994, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
+2008, 2009, 2010 Free Software Foundation, Inc.
+
+This file is part of the GNU MP Library.
+
+The GNU MP Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+The GNU MP Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the GNU MP Library.  If not, see http://www.gnu.org/licenses/.  */
+
+#define GMP_LIMB_BITS 32
+#define BYTES_PER_MP_LIMB 4
+
+/* Generated by tuneup.c */
+
+#define MUL_KARATSUBA_THRESHOLD          16
+#define MUL_TOOM3_THRESHOLD              73
+#define MUL_TOOM44_THRESHOLD            171
+
+#define SQR_BASECASE_THRESHOLD            0  /* always (native) */
+#define SQR_KARATSUBA_THRESHOLD          16
+#define SQR_TOOM3_THRESHOLD             113
+#define SQR_TOOM4_THRESHOLD             169
+
+#define MULLOW_BASECASE_THRESHOLD         0  /* always */
+#define MULLOW_DC_THRESHOLD              48
+#define MULLOW_MUL_N_THRESHOLD          330
+
+#define DIV_SB_PREINV_THRESHOLD           0  /* always */
+#define DIV_DC_THRESHOLD                 58
+#define POWM_THRESHOLD                   81
+
+#define MATRIX22_STRASSEN_THRESHOLD      19
+#define HGCD_THRESHOLD                  116
+#define GCD_DC_THRESHOLD                380
+#define GCDEXT_DC_THRESHOLD             403
+#define JACOBI_BASE_METHOD                3
+
+#define USE_PREINV_DIVREM_1               1
+#define USE_PREINV_MOD_1                  1
+#define DIVEXACT_1_THRESHOLD              0  /* always (native) */
+#define MODEXACT_1_ODD_THRESHOLD          0  /* always */
+
+#define GET_STR_DC_THRESHOLD             13
+#define GET_STR_PRECOMPUTE_THRESHOLD     27
+#define SET_STR_DC_THRESHOLD            272
+#define SET_STR_PRECOMPUTE_THRESHOLD    894
+
+#define MUL_FFT_TABLE  { 336, 672, 896, 2560, 6144, 24576, 98304, 393216, 1572864, 6291456, 0 }
+#define MUL_FFT_MODF_THRESHOLD          328
+#define MUL_FFT_THRESHOLD              2816
+
+#define SQR_FFT_TABLE  { 336, 672, 896, 2560, 6144, 24576, 98304, 393216, 1572864, 6291456, 0 }
+#define SQR_FFT_MODF_THRESHOLD          264
+#define SQR_FFT_THRESHOLD              1792
# HG changeset patch
# User Marco Bodrato <bodrato@mail.dm.unipi.it>
# Date 1265628335 -3600
#      Mon Feb 08 12:25:35 2010 +0100
# Node ID 46c976c624538e645fe24037f85b0d7bae69d4e4
# Parent  dde3c881e7ce52bc7a9cbd27bb36d0ef0e39322c
Changelog.

diff -r dde3c881e7ce -r 46c976c62453 ChangeLog
--- a/ChangeLog	Mon Feb 08 12:06:47 2010 +0100
+++ b/ChangeLog	Mon Feb 08 12:25:35 2010 +0100
@@ -1,5 +1,7 @@
 2010-02-08  Marco Bodrato  <bodrato@mail.dm.unipi.it>
 
+	* mpn/x86/atom/gmp-mparam.h: New file.
+
 	* acinclude.m4 (X86_64_PATTERN): New.
 	* configure.in: Compiler options for atom-32, and use
 	X86_64_PATTERN.
# HG changeset patch
# User Marco Bodrato <bodrato@mail.dm.unipi.it>
# Date 1268204613 -3600
#      Wed Mar 10 08:03:33 2010 +0100
# Node ID 2fab0bbcffb4b0730d7ea46364bd1ff94cde4dca
# Parent  46c976c624538e645fe24037f85b0d7bae69d4e4
Remove duplicated word.

diff -r 46c976c62453 -r 2fab0bbcffb4 doc/gmp.texi
--- a/doc/gmp.texi	Mon Feb 08 12:25:35 2010 +0100
+++ b/doc/gmp.texi	Wed Mar 10 08:03:33 2010 +0100
@@ -1795,7 +1795,7 @@
 
 will generate better contents for the @file{gmp-mparam.h} parameter file.
 
-To use the results, put the output in the file file indicated in the
+To use the results, put the output in the file indicated in the
 @samp{Parameters for ...} header.  Then recompile from scratch.
 
 The @code{tuneup} program takes one useful parameter, @samp{-f NNN}, which
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1289473304 -3600
#      Thu Nov 11 12:01:44 2010 +0100
# Node ID 73e16a6f90e35f8672bfea27e22ed1fe495dd1e3
# Parent  46c976c624538e645fe24037f85b0d7bae69d4e4
Remove documentation for non-existing function mpn_sqr_n.

diff -r 46c976c62453 -r 73e16a6f90e3 ChangeLog
--- a/ChangeLog	Mon Feb 08 12:25:35 2010 +0100
+++ b/ChangeLog	Thu Nov 11 12:01:44 2010 +0100
@@ -1,3 +1,8 @@
+2010-11-11  Torbjorn Granlund  <tege@gmplib.org>
+
+	* doc/gmp.texi (Low-level Functions): Remove documentation for
+	non-existing function mpn_sqr_n.
+
 2010-02-08  Marco Bodrato  <bodrato@mail.dm.unipi.it>
 
 	* mpn/x86/atom/gmp-mparam.h: New file.
diff -r 46c976c62453 -r 73e16a6f90e3 doc/gmp.texi
--- a/doc/gmp.texi	Mon Feb 08 12:25:35 2010 +0100
+++ b/doc/gmp.texi	Thu Nov 11 12:01:44 2010 +0100
@@ -5133,8 +5133,6 @@
 The destination has to have space for 2*@var{n} limbs, even if the product's
 most significant limb is zero.  No overlap is permitted between the
 destination and either source.
-
-If the two input operands are the same, use @code{mpn_sqr_n}.
 @end deftypefun
 
 @deftypefun mp_limb_t mpn_mul (mp_limb_t *@var{rp}, const mp_limb_t *@var{s1p}, mp_size_t @var{s1n}, const mp_limb_t *@var{s2p}, mp_size_t @var{s2n})
@@ -5149,15 +5147,6 @@
 This function requires that @var{s1n} is greater than or equal to @var{s2n}.
 @end deftypefun
 
-@deftypefun void mpn_sqr_n (mp_limb_t *@var{rp}, const mp_limb_t *@var{s1p}, mp_size_t @var{n})
-Compute the square of @{@var{s1p}, @var{n}@} and write the 2*@var{n}-limb
-result to @var{rp}.
-
-The destination has to have space for 2*@var{n} limbs, even if the result's
-most significant limb is zero.  No overlap is permitted between the
-destination and the source.
-@end deftypefun
-
 @deftypefun mp_limb_t mpn_mul_1 (mp_limb_t *@var{rp}, const mp_limb_t *@var{s1p}, mp_size_t @var{n}, mp_limb_t @var{s2limb})
 Multiply @{@var{s1p}, @var{n}@} by @var{s2limb}, and write the @var{n} least
 significant limbs of the product to @var{rp}.  Return the most significant
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1289473340 -3600
#      Thu Nov 11 12:02:20 2010 +0100
# Node ID 23bc00ec2a0669791c4845e72fde6fef631a80bf
# Parent  73e16a6f90e35f8672bfea27e22ed1fe495dd1e3
# Parent  2fab0bbcffb4b0730d7ea46364bd1ff94cde4dca
Trivial merge.

diff -r 73e16a6f90e3 -r 23bc00ec2a06 doc/gmp.texi
--- a/doc/gmp.texi	Thu Nov 11 12:01:44 2010 +0100
+++ b/doc/gmp.texi	Thu Nov 11 12:02:20 2010 +0100
@@ -1795,7 +1795,7 @@
 
 will generate better contents for the @file{gmp-mparam.h} parameter file.
 
-To use the results, put the output in the file file indicated in the
+To use the results, put the output in the file indicated in the
 @samp{Parameters for ...} header.  Then recompile from scratch.
 
 The @code{tuneup} program takes one useful parameter, @samp{-f NNN}, which
# HG changeset patch
# User Torbjorn Granlund <tege@gmplib.org>
# Date 1289480998 -3600
#      Thu Nov 11 14:09:58 2010 +0100
# Node ID 1a2742d53add129651d223c20eb9e0ecdcb2a544
# Parent  23bc00ec2a0669791c4845e72fde6fef631a80bf
Don't rely on ZF after 'bt' insn.

diff -r 23bc00ec2a06 -r 1a2742d53add ChangeLog
--- a/ChangeLog	Thu Nov 11 12:02:20 2010 +0100
+++ b/ChangeLog	Thu Nov 11 14:09:58 2010 +0100
@@ -1,8 +1,15 @@
 2010-11-11  Torbjorn Granlund  <tege@gmplib.org>
 
+	* mpn/x86_64/atom/aors_n.asm: Don't rely on ZF after 'bt' insn.
+	Use 64-bit 'test' to support operands of 2^32 limbs and more.
+
 	* doc/gmp.texi (Low-level Functions): Remove documentation for
 	non-existing function mpn_sqr_n.
 
+2010-11-06  Torbjorn Granlund  <tege@gmplib.org>
+
+	* mpn/x86_64/aors_n.asm: Rewrite not to rely on ZF after 'bt' insn.
+
 2010-02-08  Marco Bodrato  <bodrato@mail.dm.unipi.it>
 
 	* mpn/x86/atom/gmp-mparam.h: New file.
diff -r 23bc00ec2a06 -r 1a2742d53add mpn/x86_64/aors_n.asm
--- a/mpn/x86_64/aors_n.asm	Thu Nov 11 12:02:20 2010 +0100
+++ b/mpn/x86_64/aors_n.asm	Thu Nov 11 14:09:58 2010 +0100
@@ -1,6 +1,7 @@
 dnl  AMD64 mpn_add_n, mpn_sub_n
 
-dnl  Copyright 2003, 2004, 2005, 2007, 2008 Free Software Foundation, Inc.
+dnl  Copyright 2003, 2004, 2005, 2007, 2008, 2010 Free Software Foundation,
+dnl  Inc.
 
 dnl  This file is part of the GNU MP Library.
 
@@ -52,24 +53,57 @@
 	ALIGN(16)
 PROLOGUE(func_nc)
 	mov	R32(n), R32(%rax)
+	shr	$2, n
 	and	$3, R32(%rax)
-	shr	$2, n
 	bt	$0, %r8			C cy flag <- carry parameter
-	jz	L(1)
-	jmp	L(ent)
+	jrcxz	L(lt4)
+
+	mov	(up), %r8
+	mov	8(up), %r9
+	dec	n
+	jmp	L(mid)
+
 EPILOGUE()
 	ALIGN(16)
 PROLOGUE(func)
 	mov	R32(n), R32(%rax)
 	shr	$2, n
-	jz	L(0)
 	and	$3, R32(%rax)
+	jrcxz	L(lt4)
 
-L(ent):	mov	(up), %r8
+	mov	(up), %r8
 	mov	8(up), %r9
 	dec	n
 	jmp	L(mid)
 
+L(lt4):	dec	R32(%rax)
+	mov	(up), %r8
+	jnz	L(2)
+	ADCSBB	(vp), %r8
+	mov	%r8, (rp)
+	adc	%eax, %eax
+	ret
+
+L(2):	dec	R32(%rax)
+	mov	8(up), %r9
+	jnz	L(3)
+	ADCSBB	(vp), %r8
+	ADCSBB	8(vp), %r9
+	mov	%r8, (rp)
+	mov	%r9, 8(rp)
+	adc	%eax, %eax
+	ret
+
+L(3):	mov	16(up), %r10
+	ADCSBB	(vp), %r8
+	ADCSBB	8(vp), %r9
+	ADCSBB	16(vp), %r10
+	mov	%r8, (rp)
+	mov	%r9, 8(rp)
+	mov	%r10, 16(rp)
+	setc	R8(%rax)
+	ret
+
 	ALIGN(16)
 L(top):	ADCSBB	(vp), %r8
 	ADCSBB	8(vp), %r9
@@ -103,36 +137,7 @@
 
 	inc	R32(%rax)
 	dec	R32(%rax)
-	jnz	L(1)
-	adc	%eax, %eax
-	ret
-
-L(0):	test	R32(%rax), R32(%rax)
-L(1):	dec	R32(%rax)
-	mov	(up), %r8
-	jnz	L(2)
-	ADCSBB	(vp), %r8
-	mov	%r8, (rp)
+	jnz	L(lt4)
 	adc	%eax, %eax
 	ret
-
-L(2):	dec	R32(%rax)
-	mov	8(up), %r9
-	jnz	L(3)
-	ADCSBB	(vp), %r8
-	ADCSBB	8(vp), %r9
-	mov	%r8, (rp)
-	mov	%r9, 8(rp)
-	adc	%eax, %eax
-	ret
-
-L(3):	mov	16(up), %r10
-	ADCSBB	(vp), %r8
-	ADCSBB	8(vp), %r9
-	ADCSBB	16(vp), %r10
-	mov	%r8, (rp)
-	mov	%r9, 8(rp)
-	mov	%r10, 16(rp)
-	setc	%al
-	ret
 EPILOGUE()
diff -r 23bc00ec2a06 -r 1a2742d53add mpn/x86_64/atom/aors_n.asm
--- a/mpn/x86_64/atom/aors_n.asm	Thu Nov 11 12:02:20 2010 +0100
+++ b/mpn/x86_64/atom/aors_n.asm	Thu Nov 11 14:09:58 2010 +0100
@@ -1,6 +1,6 @@
 dnl  X86-64 mpn_add_n, mpn_sub_n, optimized for Intel Atom.
 
-dnl  Copyright 2003, 2004, 2005, 2007, 2008 Free Software Foundation, Inc.
+dnl  Copyright 2003, 2004, 2005, 2007, 2008, 2010 Free Software Foundation, Inc.
 
 dnl  This file is part of the GNU MP Library.
 
@@ -63,15 +63,16 @@
 	jg	L(b3)
 
 L(b1):	mov	(%rsi), %r10
-	test	R32(%rcx), R32(%rcx)
-	bt	$0, R32(%r8)
+	test	%rcx, %rcx
 	jnz	L(gt1)
+	shr	R32(%r8)			C Set CF from argument
 	ADCSBB	(%rdx), %r10
 	mov	%r10, (%rdi)
 	mov	R32(%rcx), R32(%rax)		C zero rax
 	adc	R32(%rax), R32(%rax)
 	ret
-L(gt1):	ADCSBB	(%rdx), %r10
+L(gt1):	shr	R32(%r8)
+	ADCSBB	(%rdx), %r10
 	mov	8(%rsi), %r11
 	lea	16(%rsi), %rsi
 	lea	-16(%rdx), %rdx
@@ -81,12 +82,13 @@
 L(b2):	mov	(%rsi), %r9
 	mov	8(%rsi), %r10
 	lea	-8(%rdx), %rdx
-	test	R32(%rcx), R32(%rcx)
-	bt	$0, R32(%r8)
+	test	%rcx, %rcx
 	jnz	L(gt2)
+	shr	R32(%r8)
 	lea	-40(%rdi), %rdi
 	jmp	L(e2)
-L(gt2):	ADCSBB	8(%rdx), %r9
+L(gt2):	shr	R32(%r8)
+	ADCSBB	8(%rdx), %r9
 	mov	16(%rsi), %r11
 	lea	-8(%rsi), %rsi
 	lea	-8(%rdi), %rdi
@@ -95,12 +97,13 @@
 L(b3):	mov	(%rsi), %rax
 	mov	8(%rsi), %r9
 	mov	16(%rsi), %r10
-	test	R32(%rcx), R32(%rcx)
-	bt	$0, %r8
+	test	%rcx, %rcx
 	jnz	L(gt3)
+	shr	R32(%r8)
 	lea	-32(%rdi), %rdi
 	jmp	L(e3)
-L(gt3):	ADCSBB	(%rdx), %rax
+L(gt3):	shr	R32(%r8)
+	ADCSBB	(%rdx), %rax
 	jmp	L(m3)
 
 L(b0):	mov	(%rsi), %r11
# HG changeset patch
# User Marco Bodrato <bodrato@mail.dm.unipi.it>
# Date 1295976902 -3600
#      Tue Jan 25 18:35:02 2011 +0100
# Node ID aba92ed22197841297a7e272abc311ad09b550e9
# Parent  1a2742d53add129651d223c20eb9e0ecdcb2a544
Fix typos in documentation.

diff -r 1a2742d53add -r aba92ed22197 doc/gmp.texi
--- a/doc/gmp.texi	Thu Nov 11 14:09:58 2010 +0100
+++ b/doc/gmp.texi	Tue Jan 25 18:35:02 2011 +0100
@@ -15,7 +15,7 @@
 arithmetic library, version @value{VERSION}.
 
 Copyright 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.
+2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011 Free Software Foundation, Inc.
 
 Permission is granted to copy, distribute and/or modify this document under
 the terms of the GNU Free Documentation License, Version 1.3 or any later
@@ -4093,7 +4093,7 @@
 @code{mp_bits_per_limb}.
 
 @item
-@code{mpz_mul}, @code{mpz_mul_ui} and @code{mpz_mul_ui} need room for the sum
+@code{mpz_mul}, @code{mpz_mul_ui} and @code{mpz_mul_si} need room for the sum
 of the number of bits in their operands, but each rounded up to a multiple of
 @code{mp_bits_per_limb}.
 
@@ -8423,7 +8423,7 @@
 resulting matrix is applied to the inputs using @code{mpn_mul_1} and
 @code{mpn_submul_1}. Each iteration usually reduces the inputs by almost one
 limb. In the rare case of a large quotient, no progress can be made by
-examining just the most significant two limbs, and the quotient is computing
+examining just the most significant two limbs, and the quotient is computed
 using plain division.
 
 The resulting algorithm is asymptotically @math{O(N^2)}, just as the Euclidean
